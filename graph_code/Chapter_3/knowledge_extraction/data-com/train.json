[
    {
        "summary": "UDP数据报计算检验和",
        "content": "UDP用户数据报首部中检验和的计算方法有些特殊。在计算检验和时，要在UDP  用户 数据报之前增加12个字节的伪首部。所谓“伪首部”是因为这种伪首部并不是UDP 用户数 据报真正的首部。只是在计算检验和时，临时添加在UDP用户数据报前面，得到一个临时的UDP用户数据报。检验和就是按照这个临时的UDP用户数据报来计算的。伪首部既不向 下传送也不向上递交，而仅仅是为了计算检验和。"
    },
    {
        "summary": "TCP的主要特点",
        "content": "TCP是面向连接的运输层协议。这就是说，应用程序在使用TCP 协议之前，必须先 建立TCP 连接。在传送数据完毕后，必须释放已经建立的TCP 连接。也就是说，应用进程 之间的通信好像在\"打电话\":通话前要先拨号建立连接，通话结束后要挂机释放连接。"
    },
    {
        "summary": "TCP的主要特点",
        "content": "每一条 TCP连接只能有两个端点(endpoint), 每一条 TCP连接只能是点对点的(一对一)。这个问题后面还要进一步讨论。"
    },
    {
        "summary": "TCP的主要特点",
        "content": "TCP提供可靠交付的服务。通过TCP连接传送的数据，无差错、不丢失、不重复、 并且按序到达。"
    },
    {
        "summary": "TCP的主要特点",
        "content": "TCP提供全双工通信。TCP允许通信双方的应用进程在任何时候都能发送数据。TCP连接的两端都设有发送缓存和接收缓存，用来临时存放双向通信的数据。在发送时，应用程序在把数据传送给TCP 的缓存后，就可以做自己的事，而 TCP在合适的时候把数据发送出去。在接收时，TCP把收到的数据放入缓存，上层的应用进程在合适的时候读取缓存中的数据。"
    },
    {
        "summary": "TCP的主要特点",
        "content": "面向字节流。 TCP  中的“流”(stream)  指的是流入到进程或从进程流出的字节序列。 “面向字节流”的含义是：虽然应用程序和 TCP 的交互是 一 次 一 个数据块(大小不等),但 TCP   把应用程序交下来的数据看成仅仅是一连串的无结构的字节流。 TCP  并不知道所传送  的字节流的含义。"
    },
    {
        "summary": "套接字的概念",
        "content": "TCP连接的端点叫做套接字(socket)或插口。根据RFC  793 的定义：端口号拼接到(contatenated with) IP 地址即 构成了套接字"
    },
    {
        "summary": "TCP连接",
        "content": "TCP连接就是由协议软件所提供的一种抽象。虽然有时为了方便，我们也可以 说，在一个应用进程和另一个应用进程之间建立了一条 TCP 连接，但一定要记住： TCP 连 接的端点是个很抽象的套接字，即 (IP  地址：端口号)。 也还应记住：同一个 IP  地址可以 有多个不同的TCP 连接，而同一个端口号也可以出现在多个不同的TCP连接中。"
    },
    {
        "summary": "理想传输条件的特点",
        "content": "(1)传输信道不产生差错。(2)不管发送方以多快的速度发送数据，接收方总是来得及处理收到的数据。 在这样的理想传输条件下，不需要采取任何措施就能够实现可靠传输。"
    },
    {
        "summary": "停止等待",
        "content": "“停止等待”就是每发送完一个分组就停止发送，等待对方的确认。在收到确认 后再发送下一个分组。"
    },
    {
        "summary": "超时重传",
        "content": "只要超过了一段时间仍然没有收到确认，就认为刚才发送的分组丢失了， 因而重传前面发送过的分组。这就叫做超时重传"
    },
    {
        "summary": "连续ARQ协议",
        "content": "对停止等待协议的改进 发送方一次可以发出多个分组。 使用滑动窗口协议控制发送方和接收方所能发送和接收的分组的数量和编号。 每收到一个确认，发送方就把发送窗口向前滑动。 接收方一般采用累积确认的方式。 采用回退N的方法进行重传。"
    },
    {
        "summary": "累积确认",
        "content": "接收方一般都是采用累积确认的方式。这就是说，接收方不必对收到的分组逐个发送 确认，而是在收到几个分组后， 对按序到达的最后一个分组发送确认， 这就表示：到这个分 组为止的所有分组都已正确收到了。"
    },
    {
        "summary": "累积确认的优点和缺点",
        "content": "累积确认有优点也有缺点。优点是：容易实现，即使确认丢失也不必重传。但缺点是 不能向发送方反映出接收方已经正确收到的所有分组的信息。"
    },
    {
        "summary": "TCP报文段的首部格式",
        "content": "TCP报文段首部的前20个字节是固定的(图5- 14),后面有4n 字节是根据需要而增加 的选项(n 是整数)。因此TCP 首部的最小长度是20字节"
    },
    {
        "summary": "源端口和目的端口",
        "content": "(1)源端口和目的端口  各占2个字节，分别写入源端口号和目的端口号。和前面图 5-6所示的UDP的分用相似，TCP的分用功能也是通过端口实现的。"
    },
    {
        "summary": "序号",
        "content": "(2)序号 占4字节。序号范围是[0,2³² - 1],共2³²(即4294967296)个序号。序号增加到2³²²-1后，下一个序号就又回到0。也就是说，序号使用mod 2³²运算。"
    },
    {
        "summary": "确认号",
        "content": "确认号 占4字节，是期望收到对方下一个报文段的第一个数据字节的序号。例如，B 正确收到了A 发送过来的一个报文段，其序号字段值是501,而数据长度是200字节(序号501～700),这表明B 正确收到了A 发送的到序号700为止的数据。"
    },
    {
        "summary": "数据偏移",
        "content": "数据偏移 占4位，它指出TCP 报文段的数据起始处距离TCP 报文段的起始处有多远。这个字段实际上是指出 TCP 报文段的首部长度。由于首部中还有长度不确定的选 项字段，因此数据偏移字段是必要的。但应注意，“数据偏移”的单位是32位字(即以4字 节长的字为计算单位)。由于4位二进制数能够表示的最大十进制数字是15,因此数据偏移 的最大值是60字节，这也是TCP 首部的最大长度(即选项长度不能超过40字节)。"
    },
    {
        "summary": "确认ACK(ACKnowlegment)",
        "content": "确认ACK 仅当ACK=1时确认号字段才有效。当ACK=0时，确认号无效。 TCP 规定，在连接建立后所有传送的报文段都必须把ACK 置1。"
    },
    {
        "summary": "复位RST(ReSeT)",
        "content": "复位RST(ReSeT) 当 RST=1时，表明TCP 连接中出现严重差错(如由于主机崩溃或其他原因),必须释放连接，然后再重新建立运输连接。 RST 置 1 还用来拒绝一个非 法的报文段或拒绝打开一个连接。 RST 也可称为重建位或重置位。"
    },
    {
        "summary": "同步SYN(SYNchronization)",
        "content": "同步SYN 在连接建立时用来同步序号。当SYN=1  而ACK=0时，表明这是一个连接请求报文段。对方若同意建立连接，则应在响应的报文段中使 SYN  =1和ACK=1。"
    },
    {
        "summary": "以字节为单位的滑动窗口",
        "content": "TCP的滑动窗口是以字节为单位的。"
    },
    {
        "summary": "发送窗口",
        "content": "发送窗口表示：在没有收到 B 的确认的情况下， A 可以连续把窗口内的数据都发送出去。凡是已经发送过的数据，在未收到确认之前都必须暂 时保留，以便在超时重传时使用。"
    },
    {
        "summary": "发送缓存",
        "content": "发送缓存用来暂时存放：(1)发送应用程序传送给发送方TCP 准备发送的数据；(2)TCP已发送出但尚未收到确认的数据。"
    },
    {
        "summary": "接收缓存",
        "content": "接收缓存用来暂时存放：(1)按序到达的、但尚未被接收应用程序读取的数据；(2)未按序到达的数据。"
    },
    {
        "summary": "超时重传时间的选择",
        "content": "那么，运输层的超时计时器的超时重传时间究竟应设置为多大呢?TCP采用了一种自适应算法，它记录一个报文段发出的时间，以及收到相应的确认的时间。这两个时间之差就是报文段的往返时间 RTT。TCP保留了RTT 的一个加权平均往返时间RTTs (这又称为平滑的往返时间，S表示 Smoothed。因为进行的是加权平均，因此得 出的结果更加平滑)。每当第一次测量到RTT样本时， RTTs 值就取为所测量到的 RTT样本值。"
    },
    {
        "summary": "选择确认SACK",
        "content": "如果要使用选择确认SACK, 那么在建立TCP 连接时，就要在TCP首部的选项中加 上“允许SACK” 的选项，而双方必须都事先商定好。如果使用选择确认，那么原来首部中 的\"确认号字段\"的用法仍然不变。只是以后在 TCP 报文段的首部中都增加了 SACK 选 项，以便报告收到的不连续的字节块的边界。"
    },
    {
        "summary": "利用滑动窗口实现流量控制",
        "content": "下面通过图5-22的例子说明如何利用滑动窗口机制进行流量控制。设 A向B发送数据。在连接建立时， B告诉了A: “我的接收窗口 rwnd=400”( 这里rwnd 表 示 receiver   window)。因 此 ，发送方的发送窗口不能超过接收方给出的接收窗口的数值。请注意， TCP的窗口单位是字节，不是报文段。 TCP连接建立时的窗口协商过程在图中没有显示出来。再设每一个报文段为100字节长，而数据报文段序号的初始值设为1(见 图中第一个箭头上面的序号seq=1。图中右边的注释可帮助理解整个的过程)。请注意，图中箭头上面大写ACK表示首部中的确认位 ACK,小写 ack 表示确认字段的值"
    },
    {
        "summary": "拥塞控制的概念",
        "content": "所谓拥塞控制就是防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做 的都有一个前提，就是网络能够承受现有的网络负荷。"
    },
    {
        "summary": "流量控制的概念",
        "content": "相反，流量控制往往指点对点通信量的控制，是个端到端的问题(接收端控制发送 端)。流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收。"
    },
    {
        "summary": "拥塞状态",
        "content": "当提供的负载达到某一数值时，网络的吞吐量反而随提供的负载 的增大而下降，这时网络就进入了拥塞状态"
    },
    {
        "summary": "死锁",
        "content": "当提供的负载继续增大到某一数值时，网络的 吞吐量就下降到零，网络已无法工作。这就是所谓的死锁(deadlock)"
    },
    {
        "summary": "网络负载",
        "content": "在图5-23中的横坐标是提供的负载(offered load), 代表单位时间内输入给网络的分组数 目。因此提供的负载也称为输入负载或网络负载。"
    },
    {
        "summary": "拥塞控制的方法",
        "content": "1999年公布的因特网建议标准 RFC 2581  定义了进行拥塞控制的四种算法，即慢开始 (slow-start)、拥塞避免(congestion avoidance)、快重传(fast retransmit)和快恢复(fast recovery)。"
    },
    {
        "summary": "拥塞窗口",
        "content": "发送方维持一个叫做拥塞窗口 cwnd(congestion  window)的状态变量。拥塞窗口的大小 取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口。以后我们就知道，如果再考虑到接收方的接收能力，那么发送窗口还可能小于拥塞窗口。"
    },
    {
        "summary": "发送方控制拥塞窗口的原则",
        "content": "发送方控制拥塞窗口的原则是：只要网络没有出现拥塞，拥塞窗口就再增大一些，以 便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络 中的分组数"
    },
    {
        "summary": "慢开始算法的原理",
        "content": "慢开始算法的思路是这样的。当主机开始发送数据时，如果立即把大量数据字节注入 到网络，那么就有可能引起网络拥塞，因为现在并不清楚网络的负荷情况。经验证明，较好 的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是说，由小到大逐渐增大拥塞窗 口数值。"
    },
    {
        "summary": "传输轮次",
        "content": "这里我们使用了一个名词——传输轮次。从图5-24 可以看出，一个传输轮次所经历的 时间其实就是往返时间 RTT。 不过使用“传输轮次”更加强调：把拥塞窗口 cwnd 所允许发 送的报文段都连续发送出去，并收到了对已发送的最后一个字节的确认"
    },
    {
        "summary": "慢开始门限ssthresh的用法",
        "content": "当 cwnd<ssthresh 时，使用上述的慢开始算法。当cwnd>ssthresh 时，停止使用慢开始算法而改用拥塞避免算法。当cwnd=ssthresh 时，既可使用慢开始算法，也可使用拥塞避免算法。"
    },
    {
        "summary": "快重传算法的特点",
        "content": "快重传算法首先要求接收方每收到一个失序的报文段后就立 即发出重复确认(为的是使发送方及早知道有报文段没有到达对方)而不要等待自己发送数 据时才进行捎带确认。"
    },
    {
        "summary": "快恢复算法的要点",
        "content": "与快重传配合使用的还有快恢复算法，其过程有以下两个要点：(1)当发送方连续收到三个重复确认时，就执行“乘法减小”算法，把慢开始门限 ssthresh 减半。这是为了预防网络发生拥塞。请注意，接下去不执行慢开始算法。(2)由于发送方现在认为网络很可能没有发生拥塞 (如果网络发生了严重的拥塞，就不 会一连有好几个报文段连续到达接收方，也就不会导致接收方连续发送重复确认),因此与 慢开始不同之处是现在不执行慢开始算法(即拥塞窗口 cwnd 现在不设置为1),而是把 cwnd 值设置为慢开始门限 ssthresh 减半后的数值，然后开始执行拥塞避免算法(\"加法增 大\"),使拥塞窗口缓慢地线性增大。"
    },
    {
        "summary": "尾部丢弃策略",
        "content": "网络层的策略对 TCP 拥塞控制影响最大的就是路由器的分组丢弃策略。在最简单的情 况下，路由器的队列通常都是按照“先进先出”FIFO(First In First Out) 的规则处理到来的 分组。由于队列长度总是有限的，因此当队列已满时，以后再到达的所有分组(如果能够继 续排队，这些分组都将排在队列的尾部)将都被丢弃。这就叫做尾部丢弃策略(tail-drop polocy)。"
    },
    {
        "summary": "TCP的运输连接管理",
        "content": "TCP是面向连接的协议。运输连接是用来传送TCP报文的。TCP运输连接的建立和释 放是每一次面向连接的通信中必不可少的过程。因此，运输连接就有三个阶段，即：连接建立、数据传送和连接释放。运输连接的管理就是使运输连接的建立和释放都能正常地进行。"
    },
    {
        "summary": "三次握手",
        "content": "A 的 TCP 向 B 发出连接请求报文段，其首部中的同步位 SYN = 1，并选择序号 seq = x。 2、B 的 TCP 收到连接请求报文段后，如同意，则发回确认。 B 在确认报文段中应使 SYN = 1，使 ACK = 1，其确认号 ack = x + 1，自己选择的序号 seq = y。 3、A 收到此报文段后向 B 给出确认，其 ACK = 1，确认号 ack = y + 1。 A 的 TCP 通知上层应用进程，连接已经建立。"
    },
    {
        "summary": "保活计时器",
        "content": "设想有这样的情 况：客户已主动与服务器建立了 TCP  连接。但后来客户端的主机突然出故障。显然，服务 器以后就不能再收到客户发来的数据。因此，应当有措施使服务器不要再白白等待下去。这 就是使用保活计时器。服务器每收到一次客户的数据，就重新设置保活计时器，时间的设置 通常是两小时。"
    },
    {
        "summary": "TCP的有限状态机",
        "content": "为了更清晰地看出 TCP 连接的各种状态之间的关系，图5-33 给出了 TCP 的有限状态 机。图中每一个方框即 TCP 可能具有的状态。每个方框中的大写英文字符串是TCP 标准所 使用的 TCP 连接状态名。状态之间的箭头表示可能发生的状态变迁。箭头旁边的字，表明 引起这种变迁的原因，或表明发生状态变迁后又出现什么动作。"
    },
    {
        "summary": "域名系统DNS",
        "content": "域名系统 DNS(Domain Name System)是因特网使用的命名系统，用来把便于人们使用 的机器名字转换为 IP 地址。域名系统其实就是名字系统。"
    },
    {
        "summary": "域名服务器",
        "content": "域名到 IP 地址的解析是由分布在因特网上的许多域名服务器程序 (可简称为域名服务 器)共同完成的。域名服务器程序在专设的结点上运行，而人们也常把运行域名服务器程序 的机器也称为域名服务器。"
    },
    {
        "summary": "域名",
        "content": "采用这种命名方法，任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结 构的名字，即域名(domain name)。"
    },
    {
        "summary": "域名的组成",
        "content": "从语法上讲，每一个域名都是由标号(label)序列组成，而各标号之间用点隔开(请注 意，是小数点“. ”,不是中文的句号“。”)。"
    },
    {
        "summary": "域名的规定",
        "content": "DNS 规定，域名中的标号都由英文字母和数字组成， 每一个标号不超过63个字符 (但 为了记忆方便，最好不要超过12个字符), 也不区分大小写字母 (例如， CCTV 或 cctv 在 域名中是等效的)。标号中除连字符(-)外不能使用其他的标点符号。级别最低的域名写在最 左边，而级别最高的顶级域名则写在最右边。 由多个标号组成的完整域名总共不超过255个 字符。"
    },
    {
        "summary": "顶级域名的分类",
        "content": "原先的顶级域名共分为三大类：(1)国家顶级域名nTLD；(2)通用顶级域名 gTLD；(3)基础结构域名(infrastructure domain)"
    },
    {
        "summary": "国家顶级域名nTLD",
        "content": "国家顶级域名nTLD: 采用ISO3166 的规定。如：cn 表示中国， us表示美国， uk 表 示英国，等等。国家顶级域名又常记为 ccTLD(cc 表示国家代码 country-code)。 到2012 年5月为止，国家顶级域名总共有296个。"
    },
    {
        "summary": "通用顶级域名gTLD",
        "content": "通用顶级域名 gTLD: 到2006年12月为止，通用顶级域名的总数已经达到20个。 最先确定的通用顶级域名有7个，即：com (公司企业),net(网络服务机构),org (非赢利性组织), int (国际组织),edu (美国专用的教育机构),gov (美国的政府部门), mil表示(美国的军事部门)。"
    },
    {
        "summary": "基础结构域名(infrastructure domain)",
        "content": "基础结构域名(infrastructure domain): 这种顶级域名只有一个，即arpa,用于反向域 名解析，因此又称为反向域名。"
    },
    {
        "summary": "二级域名的划分",
        "content": "我国把二级域名划分为“类别域名”和“行政区域名”两大类。"
    },
    {
        "summary": "\"类别域名\"的分类",
        "content": "\"类别域名\"共7个，分别为： ac (科研机构); com (工、商、金融等企业); edu  (中国的教育机构); gov (中国的政府机构); mil (中国的国防机构); net (提供互联网络 服务的机构); org (非营利性的组织)。"
    },
    {
        "summary": "“行政区域名”的分类",
        "content": "“行政区域名”共34个，适用于我国的各省、自治区、直辖市。例如： bj (北京市), js (江苏省),等等。"
    },
    {
        "summary": "域名树",
        "content": "用域名树来表示因特网的域名系统是最清楚的。图6- 1是因特网域名空间的结构，它实 际上是一个倒过来的树，在最上面的是根，但没有对应的名字。根下面一级的节点就是最 高一级的顶级域名(由于根没有名字，所以在根下面一级的域名就叫做顶级域名)。顶级域 名可往下划分子域，即二级域名。再往下划分就是三级域名、四级域名，等等。图6- 1 列 举 了一些域名作为例子"
    },
    {
        "summary": "区(zone)",
        "content": "一 个 服 务 器 所 负 责 管 辖 的 ( 或 有 权 限 的 ) 范 围 叫 做 区(zone)。"
    },
    {
        "summary": "区的不同划分方法的举例",
        "content": "图 6 - 2是 区的不同划分方法的举例 。假定 abc公司有下属部门x和y,部门x下面又分三个分部门u,v和w,而y下面还 有其下属部门t。图 6 - 2(a)表示abc公司只设一个区abc.com。这时，区 abc.com 和域 abc.com指的是同一件事 。但图6 - 2(b)表示abc公司划分了两个区(大的公司可能要划分多个区) : abc.com和y.abc.com。这两个区都隶 属于域abc.com,都各设置了相应的权限域名服务器 。不难看出 ，区是“ 域 ”的子集 。"
    },
    {
        "summary": "根域名服务器(root name server)",
        "content": "根域名服务器(root name server):  根域名服务器是最高层次的域名服务器，也是最 重要的域名服务器。所有的根域名服务器都知道所有的顶级域名服务器的域名和 IP 地址。"
    },
    {
        "summary": "顶级域名服务器",
        "content": "顶级域名服务器 ( 即TLD  服务器):这些域名服务器负责管理在该顶级域名服务器 注册的所有二级域名。当收到 DNS  查询请求时，就给出相应的回答(可能是最后的结果， 也可能是下一步应当找的域名服务器的IP 地址)。"
    },
    {
        "summary": "权限域名服务器",
        "content": "权限域名服务器： 这就是前面已经讲过的负责一个区的域名服务器。当一个权限域 名服务器还不能给出最后的查询回答时，就会告诉发出查询请求的 DNS  客户，下一步应当 找哪一个权限域名服务器。例如在图6-2(b)中，区 abc.com 和区 y.abc.com 各设有一个权限 域名服务器。"
    },
    {
        "summary": "本地域名服务器",
        "content": "本地域名服务器(local name server): 本地域名服务器并不属于图6-3 所示的域名服 务器层次结构，但它对域名系统非常重要。"
    },
    {
        "summary": "递归查询",
        "content": "所谓递归 查询就是：如果主机所询问的本地域名服务器不知道被查询域名的 IP 地址，那么本地域名  服务器就以 DNS  客户的身份，向其他根域名服务器继续发出查询请求报文(即替该主机继 续查询),而不是让该主机自己进行下一步的查询。因此，递归查询返回的查询结果或者是 所要查询的IP 地址，或者是报错，表示无法查询到所需的IP 地址。"
    },
    {
        "summary": "迭代查询",
        "content": "迭代查询的特点是这样的：当根域名服务器收到本地域名服务器发出的迭代查询请求报文时， 要么给出所要查询的IP 地址，要么告诉本地域名服务器：“你下一步应当向哪一个域名服务 器进行查询”。然后让本地域名服务器进行后续的查询(而不是替本地域名服务器进行后续 的查询)。"
    },
    {
        "summary": "文件传送协议FTP",
        "content": "文件传送协议FTP(File Transfer Protocol)[RFC 959]是因特网上使用得最广泛的文件传 送协议。 FTP 提供交互式的访问，允许客户指明文件的类型与格式(如指明是否使用ASCII 码),并允许文件具有存取权限(如访问文件的用户必须经过授权，并输入有效的口令)。 FTP 屏蔽了各计算机系统的细节，因而适合于在异构网络中任意计算机之间传送文件。 RFC 959很早就成为了因特网的正式标准。"
    },
    {
        "summary": "联机访问(on-line access)",
        "content": "联机访问意味着允许多个程序同时对一个文件进行存取。和数据库系统不同之处是用户不需要调用一个特殊的客户进程， 而是由操作系统提供对远地共享文件进行访问的服务，就如同对本地文件的访问一样。"
    },
    {
        "summary": "透明存取的优点",
        "content": "透明存取的优点是：将原来用于处理本地文件的应用程序用来处 理远地文件时，不需要对该应用程序作明显的改动。属于文件共享协议的有网络文件系统 NFS(Network File System)[COME06]。"
    },
    {
        "summary": "网络文件系统NFS",
        "content": "属于文件共享协议的有网络文件系统 NFS(Network File System)[COME06]。 网络文件系统NFS最初是在UNIX操作系统环境下实现文件和目录的共享。 NFS可使本地计算机共享远地的资源，就像这些资源在本地一样。"
    },
    {
        "summary": "TFTP协议",
        "content": "TCP/IP协议族中还有一个简单文件传送协议TFTP(Trivial File Transfer Protocol), 它是 一个很小且易于实现的文件传送协议。 TFTP的版本2是因特网的正式标准[RFC1350]。 虽然 TFTP也使用客户-服务器方式，但它使用UDP数据报，因此 TFTP 需要有自己的差错改正措施。TFTP只支持文件传输而不支持交互。"
    },
    {
        "summary": "TFTP的优点",
        "content": "TFTP的优点主要有两个。第一，TFTP可用于UDP环境。例如，当需要将程序或文件 同时向许多机器下载时就往往需要使用TFTP。第二，TFTP代码所占的内存较小。这对较小的计算机或某些特殊用途的设备是很重要的。这些设备不需要硬盘，只需要固化了TFTP和UDP以及IP 的小容量只读存储器即可"
    },
    {
        "summary": "TFTP的主要特点",
        "content": "TFTP的主要特点是：(1)每次传送的数据报文中有512字节的数据，但最后一次可不足512字节。(2)数据报文按序编号，从1开始。(3)支持ASCⅡ 码或二进制传送。(4)可对文件进行读或写。(5)使用很简单的首部。"
    },
    {
        "summary": "远程终端协议TELNET",
        "content": "TELNET是一个简单的远程终端协议[RFC 854], 它也是因特网的正式标准。用户用TELNET就可在其所在地通过 TCP 连接注册(即登录)到远地的另一个主机上(使用主机名或 IP 地址)。"
    },
    {
        "summary": "NVT的格式",
        "content": "NVT的格式定义很简单。所有的通信都使用8 位一个字节。在运转时， NVT 使用7位 ASCI码传送数据，而当高位置1时用作控制命令。 ASCII 码共有95个可打印字符(如字母、 数字、标点符号)和33个控制字符"
    },
    {
        "summary": "万维网概述",
        "content": "万维网 WWW(World Wide Web)并非某种特殊的计算机网络。万维网是一个大规模的、联机式的信息储藏所，英文简称为 Web 。万维网用链接的方法能非常方便地从因特网上的 一个站点访问另一个站点(也就是所谓的“链接到另一个站点”),从而主动地按需获取丰富 的信息。"
    },
    {
        "summary": "超文本的概念",
        "content": "所谓超文本是包含指向其他文档的链接的文本。也就是说，一个超文本由多个信息源链接成， 而这些信息源的数目实际上是不受限制的。"
    },
    {
        "summary": "超媒体与超文本的区别",
        "content": "超媒体与超文本的区别是文档内容不同。超文本文档仅包含文本信息，而超媒体文档 还包含其他表示方式的信息，如图形、图像、声音、动画，甚至活动视频图像"
    },
    {
        "summary": "万维网服务器",
        "content": "万维网文档所驻留的主机则运行服务器程序，因此这个主机也称为万维网服务器。"
    },
    {
        "summary": "统一资源定位符URL的作用",
        "content": "万维网使用统一资源定位符URL(Uniform Resource Locator)来标 志万维网上的各种文档，并使每一个文档在整个因特网的范围内具有唯一的标识符 URL。"
    },
    {
        "summary": "超文本传送协议HTTP",
        "content": "HTTP是一个应用层协议，它使用 TCP连接进行可靠的传送。"
    },
    {
        "summary": "URL的格式",
        "content": "URL的一般形式由以下四个部分组成：<协议>://<主机>:<端口>/<路径>"
    },
    {
        "summary": "HTTP的URL的一般形式",
        "content": "对于万维网的网点的访问要使用HTTP协议。 HTTP的URL的一般形式是：http://<主机>:<端口>/<路径>"
    },
    {
        "summary": "主页的类别",
        "content": "(1) 一 个WWW服务器的最高级别的页面。"
    },
    {
        "summary": "主页的类别",
        "content": "(2)某一个组织或部门的一个定制的页面或目录。从这样的页面可链接到因特网上的与 本组织或部门有关的其他站点。"
    },
    {
        "summary": "主页的类别",
        "content": "(3)由某一个人自己设计的描述他本人情况的 WWW页面。"
    },
    {
        "summary": "万维网的工作过程",
        "content": "每个万维网网点都有一个服务器进程，它不断地监听 TCP 的端口80,以便发现是否有 浏览器(即万维网客户。请注意，浏览器和万维网客户是同义词)向它发出连接建立请求。 一旦监听到连接建立请求并建立了 TCP 连接之后，浏览器就向万维网服务器发出浏览某个 页面的请求，服务器接着就返回所请求的页面作为响应。最后， TCP 连接就被释放了。"
    },
    {
        "summary": "HTTP协议的特点",
        "content": "HTTP协议是无状态的(stateless)。 也就是说，同一个客户第二次访问同一个服务器上的 页面时，服务器的响应与第一次被访问时的相同(假定现在服务器还没有把该页面更新),  因为服务器并不记得曾经访问过的这个客户，也不记得为该客户曾经服务过多少次。"
    },
    {
        "summary": "HTTP协议的特点",
        "content": "HTTP 使用了面向连接的TCP 作为运输层协议，保证了数据的可靠传输。 HTTP 不必考 虑数据在传输过程中被丢弃后又怎样被重传。"
    },
    {
        "summary": "持续连接",
        "content": "所谓持续连接就是万维网服务器在发送响应后仍然在一段时间内保持这条连接，使同一个客户  (浏览器)和该服务器可以继续在这条连接上传送后续的HTTP 请求报文和响应报文。"
    },
    {
        "summary": "HTTP/1.1 协议的持续连接的工作方式",
        "content": "HTTP/1.1 协议的持续连接有两种工作方式，即非流水线方式(without pipelining)和流水线方式(with pipelining)"
    },
    {
        "summary": "非流水线方式的特点",
        "content": "非流水线方式的特点，是客户在收到前一个响应后才能发出下一个请求。因此，在 TCP 连接已建立后，客户每访问一次对象都要用去一个往返时间 RTT。"
    },
    {
        "summary": "流水线方式的特点",
        "content": "流水线方式的特点，是客户在收到 HTTP  的响应报文之前就能够接着发送新的请求报 文。于是一个接一个的请求报文到达服务器后，服务器就可连续发回响应报文。"
    },
    {
        "summary": "代理服务器",
        "content": "代理服务器(proxyserver)是一种网络实体，它又称为万维网高速缓存(Web   cache)。代理 服务器把最近的一些请求和响应暂存在本地磁盘中。当新请求到达时，若代理服务器发现这 个请求与暂时存放的请求相同，就返回暂存的响应，而不需要按 URL  的地址再次去因特网 访问该资源。"
    },
    {
        "summary": "HTTP报文类型",
        "content": "HTTP有两类报文：(1)请求报文——从客户向服务器发送请求报文；(2)响应报文——从服务器到客户的回答"
    },
    {
        "summary": "开始行",
        "content": "开始行，用于区分是请求报文还是响应报文。"
    },
    {
        "summary": "请求行",
        "content": "在请求报文中的开始行叫做请求行 (Request-Line)"
    },
    {
        "summary": "状态行",
        "content": "在响应报文中的开始行叫做状态行(Status-Line)"
    },
    {
        "summary": "首部行",
        "content": "首部行，用来说明浏览器、服务器或报文主体的一些信息。"
    },
    {
        "summary": "HTTP请求报文的特点",
        "content": "请求报文的第一行“请求行”只有三个内容，即方法，请求资源的URL,  以及 HTTP 的版本。"
    },
    {
        "summary": "状态行的组成",
        "content": "状态行包括三项内容，即HTTP的版本，状态码，以及解释状态码的简单短语。"
    },
    {
        "summary": "状态码1xx",
        "content": "1xx 表示通知信息的，如请求收到了或正在进行处理。"
    },
    {
        "summary": "状态码3xx",
        "content": "3xx 表示重定向，如要完成请求还必须采取进一步的行动。"
    },
    {
        "summary": "状态码4xx",
        "content": "4xx 表示客户的差错，如请求中有错误的语法或不能完成。"
    },
    {
        "summary": "状态码5xx",
        "content": "5xx 表示服务器的差错，如服务器失效无法完成请求"
    },
    {
        "summary": "Cookie的工作原理",
        "content": "Cookie 是这样工作的。当用户张三浏览某个使用 Cookie 的网站时，该网站的服务器就  为张三产生一个唯一的识别码，并以此作为索引在服务器的后端数据库中产生一个项目。接  着在给张三的HTTP 响应报文中添加一个叫做 Set-cookie 的首部行。"
    },
    {
        "summary": "超文本标记语言HTML",
        "content": "超文本标记语言 HTML (HyperText  Markup  Language)就是一种制作万维 网页面的标准语言，它消除了不同计算机之间信息交流的障碍。"
    },
    {
        "summary": "HTML用于排版的命令",
        "content": "HTML定义了许多用于排版的命令，即“标签”(tag)”。例如，<1>表示后面开始用斜体 字排版，而<I> 则表示斜体字排版到此结束。"
    },
    {
        "summary": "HTML文档",
        "content": "HTML文档是一种可以用任何文本编辑器(例如，Windows 的记事本 Notepad) 创建的 ASCI 码文件。"
    },
    {
        "summary": "XML",
        "content": "XML(Extensible Markup Language)是可扩展标记语言，它和HTML 很相似。但XML 的 设计宗旨是传输数据，而不是显示数据 (HTML是为了在浏览器上显示数据)。更具体些， XML是用于标记电子文件，使其具有结构性的标记语言，可用来标记数据、定义数据类 型，是一种允许用户对自己的标记语言进行定义的源语言。"
    },
    {
        "summary": "XHTML",
        "content": "另一种语言XHTML(Extensible HTML)是可扩展超文本标记语言，它与HTML4.01几 乎是相同的。但XHTML是更严格的HTML版本，也是一个W3C标准(2000年1月),是作为一种XML应用被重新定义的 HTML,并将逐渐取代HTML。"
    },
    {
        "summary": "CSS语言",
        "content": "还有一种语言CSS(Cascading Style Sheets)是层叠样式表，它是一种样式表语言，用于 为 HTML  文档定义布局。 CSS 与 HTML  的区别就是： HTML  用于结构化内容，而 CSS 则 用于格式化结构化的内容。例如，在浏览器上显示的字体、颜色、边距、高度、宽度、背景 图像等方面，都能够给出精确的规定。现在所有的浏览器都支持CSS"
    },
    {
        "summary": "静态文档",
        "content": "静态文档是指在文档创作完毕后就存放在万维网服务器中，在被用户浏览的过 程中，内容不会改变。由于这种文档的内容不会改变，因此用户对静态文档的每次读取所得 到的返回结果都是相同的。"
    },
    {
        "summary": "静态文档的特点",
        "content": "静态文档的最大优点是简单。由于HTML是一种排版语言，因此静态文档可以由不懂程序设计的人员来创建。但静态文档的缺点是不够灵活。当信息变化时就要由文档的作者手 工对文档进行修改。可见，变化频繁的文档不适于作成静态文档。"
    },
    {
        "summary": "动态文档",
        "content": "动态文档(dynamic document)是指文档的内容是在浏览器访问万维网服务器时才由应用 程序动态创建。当浏览器请求到达时，万维网服务器要运行另一个应用程序，并把控制转移 到此应用程序。"
    },
    {
        "summary": "动态文档和静态文档的区别",
        "content": "动态文档和静态文档之间的主要差别体现在服务器一端。这主要是文档内容的生成方 法不同。而从浏览器的角度看，这两种文档并没有区别。"
    },
    {
        "summary": "通用网关接口CGI",
        "content": "CGI 是一种标准，它定义了动态文档应如何创建， 输入数据应如何提供给应用程序，以及输出结果应如何使用。"
    },
    {
        "summary": "CGI程序",
        "content": "在万维网服务器中新增加的应用程序叫做 CGI程序。取这个名字的原因是：万维网服 务器与CGI 的通信是遵循着CGI 标准。"
    },
    {
        "summary": "服务器推送",
        "content": "一种技术称为服务器推送(server push), 这种技术是将所有的工作都交给服务器。服务器不断地运行与动态文档相关联的应 用程序，定期更新信息，并发送更新过的文档。"
    },
    {
        "summary": "活动文档",
        "content": "另一种提供屏幕连续更新的技术是活动文档(active document)。 这种技术是把所有的工 作都转移给浏览器端。每当浏览器请求一个活动文档时，服务器就返回一段活动文档程序副 本，使该程序副本在浏览器端运行。"
    },
    {
        "summary": "Java技术的三个组成成分",
        "content": "(1)程序设计语言。 Java 包含一个新的程序设计语言，它既可用来编写传统的计算机程 序，也可用来编写Java小应用程序。"
    },
    {
        "summary": "Java技术的三个组成成分",
        "content": "(2)运行(runtime)环境。 Java 系统还定义了一个运行Java 程序所必须的运行环境，其中 包括一个Java虚拟机(简称为JVM),  该软件定义了Java 二进制代码的执行模型。"
    },
    {
        "summary": "Java技术的三个组成成分",
        "content": "(3)类库(class library)。 为了更容易编写 Java 小应用程序， Java 提供了强大的类库支 持。"
    },
    {
        "summary": "搜索引擎的种类",
        "content": "搜索引擎的种类很多， 但大体上可划分为两大类，即全文检索搜索引擎和分类目录搜索引擎。"
    },
    {
        "summary": "全文检索搜索引擎",
        "content": "全文检索搜索引擎是一种纯技术型的检索工具。它的工作原理是通过搜索软件(例如一 种叫做“蜘蛛\"或\"网络机器人”的 Spider 程序)到因特网上的各网站收集信息，找到一 个网站后可以从这个网站再链接到另一个网站，像蜘蛛爬行一样。然后按照一定的规则建立 一个很大的在线数据库供用户查询。"
    },
    {
        "summary": "分类目录搜索引擎",
        "content": "分类目录搜索引擎并不采集网站的任何信息，而是利用各网站向搜索引擎提交的网站信 息时填写的关键词和网站描述等信息，经过人工审核编辑后，如果认为符合网站登录的条 件，则输入到分类目录的数据库中，供网上用户查询。"
    },
    {
        "summary": "垂直搜索引擎(Vertical Search Engine)",
        "content": "值得注意的是，目前出现了垂直搜索引擎(Vertical Search Engine),  它针对某一特点领 域、特定人群或某一特点需求提供搜索服务。垂直搜索也是提供关键字来进行搜索的，但被 放到了一个行业知识的上下文中，返回的结果更倾向于信息、消息、条目等。"
    },
    {
        "summary": "Google搜索技术的特点",
        "content": "Google 的搜索引擎性能优良，因为它使用了先进的硬件和软件。以往的大多数的搜索 引擎是使用少量大型服务器。在访问高峰期，搜索的速度就会明显减慢。 Google 则利用在 因特网上相互链接的PC 来快速查找每个搜索的答案，并且成功地缩短了查找的相应时间。 Google 的搜索软件可同时进行许多运算，它的核心技术就是PageRank, 译为网页排名。"
    },
    {
        "summary": "博客",
        "content": "博客是万维网日志(web log)的简称。也有人把 blog 进行音译，译为“部落格”,或“部 落阁\"。还有人用“博文\"来表示“博客文章\"。"
    },
    {
        "summary": "博客与个人网站的区别",
        "content": "但是，博客与个人网站还是有不少区别。这里最主要的区别就是建立个人网站不仅是 成本较高，需要租用个人空间、域名等，同时对建立网站的个人需要懂得 HTML   语言和网 页制作等相关技术；但博客在这方面是不需要什么投资的，所需的技术仅仅是会上网和会用 键盘或书写板输入汉字即可。"
    },
    {
        "summary": "微博",
        "content": "从字面上看，微博就是微型博客(microblog),又称为微博客，它的意思已经非常清楚。 博客或微博里的朋友，常称为“博友\"。微博也被人戏称为“围脖\",把博友戏称为“脖 友\"。"
    },
    {
        "summary": "微博和博客的区别",
        "content": "但微博不同于一般的博客。微博只记录片段、碎语，三言两语，现场记录，发发感慨， 晒晒心情，永远只针对一个问题进行回答。微博只是记录自己琐碎的生活，呈现给人看，而且必须很真实。微博中不必有太多的逻辑思维，很随便，很自由，有点像电影中的一个镜 头。写微博比写其他东西简单多了，不需要标题，不需要段落，更不需要漂亮的词汇"
    },
    {
        "summary": "新浪微博概述",
        "content": "例如，新浪微博就是由中国最大的门户网站新浪网推出的微博服 务，是中国目前用户数最多的微博网站，名人用户众多是新浪微博的一大特色，基本已经覆 盖大部分知名文体明星、企业高管、媒体人士。"
    },
    {
        "summary": "轻博",
        "content": "轻博客是一种介于博客和微博之间的网络服 务，同样为用户提供生成内容表达自己的平台。"
    },
    {
        "summary": "轻博的特点",
        "content": "轻博可以发送博文，没有字数限制；轻博发表后，其界面会好看些；在轻博中，推荐与发现的内容比较丰富。"
    },
    {
        "summary": "电子邮件",
        "content": "电子邮件(e-mail)是因特网上使用最多的和最受用户欢迎的一种应用。电子邮件把邮件 发送到收件人使用的邮件服务器，并放在其中的收件人邮箱(mail box)中，收件人可在自己 方便时上网到自己使用的邮件服务器进行读取。"
    },
    {
        "summary": "电子邮件系统的组成部分",
        "content": "一个电子邮件系统应具有图6- 17 所示的三个主要组成构件，这就是用户代理、邮件服 务器， 以及邮件发送协议(如 SMTP)    和邮件读取协议(如 POP3) 。"
    },
    {
        "summary": "用户代理的功能",
        "content": "(1) 撰写。 给用户提供编辑信件的环境。例如，应让用户能创建便于使用的通讯录(有 常用的人名和地址)"
    },
    {
        "summary": "SMTP协议的特点",
        "content": "SMTP规定了在两个相互通信的 SMTP 进程之间应如何交换信息。由于 SMTP 使用客 户-服务器方式，因此负责发送邮件的 SMTP 进程就是 SMTP 客户，而负责接收邮件的 SMTP 进程就是SMTP 服务器。"
    },
    {
        "summary": "SMTP协议的特点",
        "content": "SMTP 规定了14条命令和21种应答信息。每条命令用几个字母组成，而每一种应答信 息一般只有一行信息，由一个3位数字的代码开始，后面附上(也可不附上)很简单的文字 说明。下面通过发送方和接收方的邮件服务器之间的 SMTP 通信的三个阶段介绍几个最主 要的命令和响应信息。"
    },
    {
        "summary": "电子邮件的信息格式",
        "content": "一个电子邮件分为信封和内容两大部分。在RFC  5322 文档中只规定了邮件内容中的首 部(header)格式，而对邮件的主体(body)部分则让用户自由撰写。"
    },
    {
        "summary": "邮件内容的关键字",
        "content": "邮件内容首部包括一些关键字，后面加上冒号。最重要的关键字是： To 和 Subject。"
    },
    {
        "summary": "To关键字",
        "content": "\"To:\" 后面填入一个或多个收件人的电子邮件地址。在电子邮件软件中，用户把经常 通信的对象姓名和电子邮件地址写到地址簿(address book)中。"
    },
    {
        "summary": "Subject关键字",
        "content": "“Subject:”是邮件的主题。它反映了邮件的主要内容。主题类似于文件系统的文件 名，便于用户查找邮件。"
    },
    {
        "summary": "常用的邮件读取协议",
        "content": "现在常用的邮件读取协议有两个，即邮局协议第3个版本 POP3 和网际报文存取协议 IMAP(Internet Message Access Protocol)。现分别讨论如下。"
    },
    {
        "summary": "POP协议",
        "content": "邮局协议POP 是一个非常简单、但功能有限的邮件读取协议。邮局协议 POP 最初公布 于1984年[RFC918]。"
    },
    {
        "summary": "POP协议的工作方式",
        "content": "POP 也使用客户-服务器的工作方式。在接收邮件的用户 PC 中的用户代理必须运行 POP 客户程序，而在收件人所连接的 ISP 的邮件服务器中则运行 POP 服务器程序。"
    },
    {
        "summary": "POP协议的特点",
        "content": "POP3 协议的一个特点就是只要用户从 POP 服务器读取了邮件， POP 服务器就把该邮 件删除。"
    },
    {
        "summary": "IMAP协议",
        "content": "在使用IMAP 时，在用户的PC 上运行IMAP 客户程序，然后与接收方的邮件服务器上 的 IMAP 服务器程序建立 TCP 连接。用户在自己的 PC 上就可以操纵邮件服务器的邮箱， 就像在本地操纵一样，因此 IMAP 是一个联机协议。"
    },
    {
        "summary": "IMAP协议的优点",
        "content": "IMAP最大的好处就是用户可以在不同的地方使用不同的计算机(例如，使用办公室的 计算机、或家中的计算机，或在外地使用笔记本计算机)随时上网阅读和处理自己的邮件。"
    },
    {
        "summary": "IMAP协议的缺点",
        "content": "IMAP的缺点是如果用户没有将邮件复制到自己的 PC 上，则邮件一直是存放在 IMAP。服务器上。因此，用户需要经常与IMAP 服务器建立连接(因为许多用户要考虑所花费的上 网费)。"
    },
    {
        "summary": "协议配置",
        "content": "在协议软件中给这些参数赋值的动作叫做协议配置。 一个协议软件在使用之前必须是 已正确配置的。"
    },
    {
        "summary": "动态主机配置协议DHCP",
        "content": "现在广泛使用是动态主机配置协议 DHCP(Dynamic Host Configuration Protocol), 它提 供了一种机制，称为即插即用连网(plug-and-play networking)。 这种机制允许一台计算机加 入新的网络和获取IP地址而不用手工参与。"
    },
    {
        "summary": "DHCP协议的通信模式",
        "content": "DHCP使用客户-服务器方式。需要IP地址的主机在启动时就向DHCP 服务器广播发送发现报文 (DHCPDISCOVER)   (将目的IP地址置为全1,即255.255.255.255),这时该主机就成为 DHCP 客户。"
    },
    {
        "summary": "租用期",
        "content": "DHCP服务器分配给 DHCP客户的IP 地址是临时的，因此 DHCP客户只能在一段有限的时间内使用这个分配到的IP 地 址 。DHCP协议称这段时间为租用期(lease period), 但并没 有具体规定租用期应取为多长或至少为多长，这个数值应由 DHC 服务器自己决定。"
    },
    {
        "summary": "DHCP协议常用端口号",
        "content": "DHCP客户使用的UDP端口是68,而DHCP服务器使用的UDP端口是67。这两个UDP端口都是熟知端口。"
    },
    {
        "summary": "网络管理",
        "content": "网络管理包括对硬件、软件和人力的使用、综合与协调，以便对网络资源进行监视、  测试、配置、分析、评价和控制，这样就能以合理的价格满足网络的一些需求，如实时运行 性能、服务质量等。网络管理常简称为网管。"
    },
    {
        "summary": "管理站",
        "content": "管理站又称为管理器，是整个网络管理系统的核心，它通常是个有着良好图形界面的 高性能的工作站，并由网络管理员直接操作和控制。"
    },
    {
        "summary": "网络管理代理程序",
        "content": "在每一个被管设备中都要运行一个程序以便和管理站中的管理程序进行通信。这些运行 着的程序叫做网络管理代理程序， 或简称为代理(agent)"
    },
    {
        "summary": "SNMP的网络管理组成",
        "content": "SNMP的网络管理由三个部分组成，即 SNMP 本身、管理信息结构 SMI(Structure of Management Information)和管理信息库 MIB(Management Information Base)。"
    },
    {
        "summary": "SNMP的作用",
        "content": "SNMP定义了管理站和代理之间所交换的分组格式。所交换的分组包含各代理中的对 象(变量)名及其状态(值)。 SNMP 负责读取和改变这些数值。"
    },
    {
        "summary": "SMI的作用",
        "content": "SMI定义了命名对象和定义对象类型(包括范围和长度)的通用规则，以及把对象和 对象的值进行编码的规则。"
    },
    {
        "summary": "MIB的作用",
        "content": "MIB在被管理的实体中创建了命名对象，并规定了其类型。"
    },
    {
        "summary": "系统调用",
        "content": "大多数操作系统使用系统调用(system call)的机制在应用程序和操作系统之间传递控制 权。对程序员来说，系统调用和一般程序设计中的函数调用非常相似，只是系统调用是将控 制权传递给了操作系统。"
    },
    {
        "summary": "应用编程接口",
        "content": "由于应用程序在使用系统调用之前要编写一些 程序，特别是需要设置系统调用中的许多参数，因此这种系统调用接口又称为应用编程接口 API(Application Programming Interface)"
    },
    {
        "summary": "网络安全威胁分类",
        "content": "计算机网络上的通信面临以下两大类威胁，即被动攻击和主动攻击"
    },
    {
        "summary": "被动攻击",
        "content": "这是指攻击者从网络上窃听他人的通信内容。通常把这类攻击称为截获。"
    },
    {
        "summary": "主动攻击方式",
        "content": "(1) 篡改   攻击者故意篡改网络上传送的报文。这里也包括彻底中断传送的报文，甚至把完全伪造的报文传送给接收方。这种攻击方式有时也称为“更改报文流”。"
    },
    {
        "summary": "主动攻击方式",
        "content": "恶意程序   恶意程序(rogue program)种类繁多，对网络安全威胁较大"
    },
    {
        "summary": "计算机病毒(computer virus)",
        "content": "计算机病毒(computer virus),  一种会“传染”其他程序的程序，\"传染\"是通过修 改其他程序来把自身或其变种复制进去完成的。"
    },
    {
        "summary": "计算机蠕虫(computer worm)",
        "content": "计算机蠕虫(computer worm), 一种通过网络的通信功能将自身从一个结点发送到 另一个结点并自动启动运行的程序。"
    },
    {
        "summary": "特洛伊木马(Trojan horse)",
        "content": "特洛伊木马(Trojan horse), 一种程序，它执行的功能并非所声称的功能而是某种恶 意的功能。如一个编译程序除了执行编译任务以外，还把用户的源程序偷偷地复制 下来，则这种编译程序就是一种特洛伊木马。计算机病毒有时也以特洛伊木马的形 式出现。"
    },
    {
        "summary": "逻辑炸弹(logic  bomb)",
        "content": "逻辑炸弹(logic  bomb), 一种当运行环境满足某种特定条件时执行其他特殊功能的 程序。如一个编辑程序，平时运行得很好，但当系统时间为13 日又为星期五时， 它删去系统中所有的文件，这种程序就是一种逻辑炸弹。"
    },
    {
        "summary": "拒绝服务",
        "content": "拒绝服务   指攻击者向因特网上的某个服务器不停地发送大量分组，使因特网或服务器无法提供正常服务。"
    },
    {
        "summary": "计算机网络通信安全的目标",
        "content": "根据这些特点，可得出计算机网络通信安全的目标如下：(1)防止析出报文内容和流量分析；(2)防止恶意程序；(3)检测更改报文流和拒绝服务。"
    },
    {
        "summary": "计算机网络安全的内容",
        "content": "计算机网络安全主要有以下一些内容：1.保密性 2. 安全协议的设计 3. 访问控制"
    },
    {
        "summary": "保密性概述",
        "content": "为用户提供安全可靠的保密通信是计算机网络安全最为重要的内容。尽管计算机网络 安全不仅仅局限于保密性，但不能提供保密性的网络肯定是不安全的。网络的保密性机制除 为用户提供保密通信以外，也是许多其他安全机制的基础。"
    },
    {
        "summary": "安全协议的设计",
        "content": "目前在安全协议的设计方面，主要是针对具体的攻击(如假冒)设计安全的 通信协议。但如何保证所设计出的协议是安全的?这可以使用两种方法。 一种是用形式化方 法来证明，另一种是用经验来分析协议的安全性。"
    },
    {
        "summary": "访问控制",
        "content": "访问控制(access  control)也叫做存取控制或接入控制。 必须对接入网络的权限加以控 制，并规定每个用户的接入权限。"
    },
    {
        "summary": "密码编码学",
        "content": "密码编码学(cryptography)是密码体制的设计学，而密码分析学(cryptanalysis)则是在未知 密钥的情况下从密文推演出明文或密钥的技术。密码编码学与密码分析学合起来即为密码学 (cryptology)。"
    },
    {
        "summary": "对称密钥密码体制",
        "content": "所谓对称密钥密码体制，即加密密钥与解密密钥是相同的密码体制。"
    },
    {
        "summary": "数据加密标准 DES",
        "content": "DES 是一种分组密码。在加密前，先对整个的明文进行分组。每一个组为64 位长的二 进制数据。然后对每一个64 位二进制数据进行加密处理，产生一组64 位密文数据。最后 将各组密文串接起来，即得出整个的密文。使用的密钥为64位(实际密钥长度为56位，有 8位用于奇偶校验)"
    },
    {
        "summary": "DES特点",
        "content": "DES 的保密性仅取决于对密钥的保密，而算法是公开的。目前较为严重的问题是 DES  的密钥长度。56 位长的密钥意味着共有2⁵⁶种可能的密钥，也就是说，共约有7.6×10¹⁶种 密钥。假设一台计算机1 μs 可执行一次 DES 加密，同时假定平均只需搜索密钥空间的一半 即可找到密钥，那么破译DES 要超过1000年。"
    },
    {
        "summary": "公钥密码体制",
        "content": "公钥密码体制(又称为公开密钥密码体制)的概念是由斯坦福(Stanford)大学的研究人 员 Diffie 与 Hellman 于1976年提出的[DIFF76]。公钥密码体制使用不同的加密密钥与解密 密钥。"
    },
    {
        "summary": "公钥密码体制特点",
        "content": "在公钥密码体制中，加密密钥 PK(public    key, 即公钥)是向公众公开的，而解密密钥 SK(secret key, 即私钥或秘钥)则是需要保密的。加密算法 E 和解密算法 D 也都是公开 的。"
    },
    {
        "summary": "数字签名",
        "content": "书信或文件是根据亲笔签名或印章来证明其真实性。但在计算机网络中传送的文电又 如何盖章呢?这就要使用数字签名。"
    },
    {
        "summary": "数字签名的功能",
        "content": "报文鉴别、报文的完整性、不可否认"
    },
    {
        "summary": "报文鉴别",
        "content": "(1)接收者能够核实发送者对报文的签名。也就是说，接收者能够确信该报文的确是发 送者发送的。其他人无法伪造对报文的签名。这就叫做报文鉴别。"
    },
    {
        "summary": "报文的完整性",
        "content": "(2)接收者确信所收到的数据和发送者发送的完全一样而没有被篡改过。这就叫做报文 的完整性。"
    },
    {
        "summary": "不可否认",
        "content": "(3)发送者事后不能抵赖对报文的签名。这就叫做不可否认。"
    },
    {
        "summary": "鉴别",
        "content": "鉴别是要验证通信的对方的确是自己所要通信的对象，而不是其他的冒充者。"
    },
    {
        "summary": "鉴别与授权的区别",
        "content": "请注意，鉴别与授权(authorization)是不同的概念。授权涉及到的问题是：所进行的过程 是否被允许(如是否可以对某文件进行读或写)。"
    },
    {
        "summary": "报文摘要MD",
        "content": "报文摘要MD(Message Digest)是进行报文鉴别的简单方法。如图7-6所示， A 把较长的 报 文X 经过报文摘要算法运算后得出很短的报文摘要 H。 然后用自己的私钥对H 进 行D 运 算，即进行数字签名。得出已签名的报文摘要。"
    },
    {
        "summary": "MD5的算法的过程",
        "content": "MD5的算法大致的过程如下：(1)先把任意长的报文按模2*计算其余数(64位),追加在报文的后面。(2)在报文和余数之间填充1~512位，使得填充后的总长度是512的整数倍。填充的首 位是1,后面都是0。"
    },
    {
        "summary": "实体鉴别和报文鉴别的区别",
        "content": "实体鉴别和报文鉴别不同。报文鉴别是对每一个收到的报文都要鉴别报文的发送者，而 实体鉴别是在系统接入的全部持续时间内对和自己通信的对方实体只需验证一次。"
    },
    {
        "summary": "不重数",
        "content": "不重数就是一个不重复使用的大随机 数，即\"一次一数\"。"
    },
    {
        "summary": "密钥管理",
        "content": "密钥管理包括：密钥的产生、分配、注入、验证和 使用"
    },
    {
        "summary": "密钥分配",
        "content": "密钥分配(或密钥分发) 是密钥管理中最大的问题。密钥必须通过最安全的通路进行分 配。"
    },
    {
        "summary": "网外分配方式",
        "content": "例如，可以派非常可靠的信使携带密钥分配给互相通信的各用户。这种方法称为网外分 配方式。"
    },
    {
        "summary": "网内分配方式",
        "content": "但随着用户的增多和网络流量的增大，密钥更换频繁(密钥必须定期更换才能做到 可靠),派信使的办法已不再适用，而应采用网内分配方式， 即对密钥自动分配。"
    },
    {
        "summary": "密钥分配中心KDC",
        "content": "KDC是 大家都信任的机构，其任务就是给需要进行秘密通信的用户临时分配一个会话密钥(仅使用 一次)。"
    },
    {
        "summary": "Kerberos V5",
        "content": "Kerberos 既是鉴别协议，同时也是 KDC,它已经变得很普及。 Kerberos 使用比DES 更加安全的先进的加密标准 AES(Advanced Encryption Standard)进行加密。"
    },
    {
        "summary": "Kerberos特点",
        "content": "Kerberos使用两个服务器：鉴别服务器 AS(Authentication Server)、 票据授予服务器 TGS(Ticket-Granting Server)。Kerberos 只用于客户与服务器之间的鉴别，而不用于人对人的 鉴别。"
    },
    {
        "summary": "IPsec 协议",
        "content": "IPsec 就是“IP 安全(Security)协议”的缩写。在这些文档中，最重要的就是描述 IP 安全体系结构 的 RFC 4301 和提供 IPsec 协议族概述的 RFC 2411。"
    },
    {
        "summary": "IPsec 协议族的主要协议",
        "content": "在IPsec协议族中有两个最主要的协议：鉴别首部 AH(Authentication Header)协议和封装安全有效载荷 ESP(Encapsulation Security Payload)协议。"
    },
    {
        "summary": "AH协议的功能",
        "content": "AH协议提供源点鉴别和数据完整性，但不能保密。"
    },
    {
        "summary": "ESP协议的功能",
        "content": "而ESP协议比AH 协议复杂得多，它提供源点鉴别、数据完整性和保密。"
    },
    {
        "summary": "IPsec数据报",
        "content": "使用IPsec协议的IP数据报称为IPsec数据报，它可以在两个主机之间、两个路由器之 间或在一个主机和一个路由器之间发送。"
    },
    {
        "summary": "安全关联 SA(Security Association)",
        "content": "在发送IPsec 数据报之前，在源实体和目的实体之 间必须创建一条网络层的逻辑连接，即安全关联 SA(Security Association)。"
    },
    {
        "summary": "安全关联的特点",
        "content": "安全关联是从源点到终点的单 向连接，它能够提供安全服务。"
    },
    {
        "summary": "安全关联SA的状态信息",
        "content": "安全参数索引SPI、SA的源点、所使用的加密类型(例如， DES)、完整性检查的类型"
    },
    {
        "summary": "安全参数索引SPI",
        "content": "一个32位的连接标识符，称为安全参数索引SPI"
    },
    {
        "summary": "IPsec数据报两种不同的工作方式",
        "content": "第一种工作方式是运输方式；第二种工作方式是隧道方式(tunnel  mode)"
    },
    {
        "summary": "运输方式",
        "content": "第 一 种工作方式是运输方式(transport  mode)。 运输方式是在整个运输层报文段的后面和 前面分别添加 一 些控制字段，构成 IPsec 数据报。这种方式把整个运输层报文段都保护起 来，因此很适合于主机到主机之间的安全传送，但这需要使用 IPsec 的 主 机 都 运 行 IPsec 协 议 。"
    },
    {
        "summary": "隧道方式(tunnel  mode)",
        "content": "第二种工作方式是隧道方式(tunnel  mode)。 隧道方式是在 一 个 IP 数据报的后面和前面 分别添加 一 些控制字段，构成 IPsec 数据报。"
    },
    {
        "summary": "运输层报文段封装成IPsec数据报的过程",
        "content": "(1)在运输层报文段(或IP数据报)后面添加ESP尾部 (2)按照安全关联 SA 指明的加密算法和密钥"
    },
    {
        "summary": "安全关联数据库SAD",
        "content": "当一个主机要发送IPsec数据报时，就要在SAD 中查找相应 的 SA, 以便获得必要的信息来对该 IPsec 数据报实施安全保护。同样，当一个主机要接收 IPsec数据报时，也要在 SAD 中查找相应的SA, 以便获得信息来检查该分组的安全性。"
    },
    {
        "summary": "IKE",
        "content": "因此，对于大型的、地理位置分散的系统，为了创建 SAD,  我们 需要使用自动生成的机制，这就是使用因特网密钥交换 IKE(Internet Key Exchange)协议。 IKE 的用途就是为IPsec创建安全关联SA。"
    },
    {
        "summary": "IKE的协议基础",
        "content": "IKE是个非常复杂的协议， IKEv2是较新的版本。它以另外三个协议为基础：(1)Oakley——是个密钥生成协议[RFC 2412](2)安全密钥交换机制SKEME(Secure Key Exchange Mechanism)      是用于密钥交换 的协议。它利用公钥加密来实现密钥交换协议中的实体鉴别。"
    },
    {
        "summary": "运输层安全协议",
        "content": "像上述这些安全服务，需要使用运输层的安全协议。现在广泛使用的有两个协议：安全套接字层SSL(Secure Socket Layer)；运输层安全 TLS(Transport Layer Security)"
    },
    {
        "summary": "SSL协议的特点",
        "content": "SSL协议是Netscape 公司在1994开发的安全协议，广泛应用于基于万维网的各种网络 应用(但不限于万维网应用)。 SSL 作用在端系统应用层的HTTP 和运输层之间，在TCP 之上建立起一个安全通道，为通过TCP 传输的应用层数据提供安全保障。"
    },
    {
        "summary": "SSL提供的安全服务",
        "content": "SSL提供的安全服务可归纳为以下三种：(1)SSL服务器鉴别，允许用户证实服务器的身份。(2)SSL客户鉴别， SSL的可选安全服务，允许服务器证实客户的身份。(3)加密的 SSL 会话，对客户和服务器间发送的所有报文进行加密，并检测报文是否被 篡改。"
    },
    {
        "summary": "SSL的工作过程",
        "content": "(1)协商加密算法(2)服务器鉴别(3)会话密钥计算(4)安全数据传输"
    },
    {
        "summary": "PGP协议",
        "content": "PGP(Pretty Good Privacy)是Zimmermann于1995年开发出的。它是一个完整的电子邮 件安全软件包，包括加密、鉴别、电子签名和压缩等技术。"
    },
    {
        "summary": "PGP工作原理",
        "content": "PGP工作原理并不复杂。它提供电子邮件的安全性、发送方鉴别和报文完整性。"
    },
    {
        "summary": "用户入侵",
        "content": "用户入侵包括利用系统漏洞进行未授权登录，或者授权用户非法获取更高级别权 限。"
    },
    {
        "summary": "软件入侵",
        "content": "软件入侵方式包括通过网络传播病毒、蠕虫和特洛伊木马"
    },
    {
        "summary": "防火墙",
        "content": "防火墙是一种特殊编程的路由器，安装在一个网点和网络的其余部分之间，目的是实 施访问控制策略。"
    },
    {
        "summary": "可信的网络",
        "content": "一般都把防火墙里面的网络称为“可信的网 络”(trusted network)\""
    },
    {
        "summary": "不可信的网络",
        "content": "把防火墙外面的网络称为“不可信的网络”(untrusted network)"
    },
    {
        "summary": "防火墙技术的分类",
        "content": "防火墙技术一般分为两类，即：分组过滤路由器、应用网关"
    },
    {
        "summary": "分组过滤路由器",
        "content": "分组过滤路由器是一种具有分组过滤功能的路由器，它根据过滤规则对进出内部网 络的分组执行转发或者丢弃(即过滤)。"
    },
    {
        "summary": "分组过滤的特点",
        "content": "分组过滤可以是无状态的，即独立地处理每一个分组。也可以是有状态的，即要跟踪 每个连接或会话的通信状态，并根据这些状态信息来决定是否转发分组。"
    },
    {
        "summary": "分组过滤路由器的优点",
        "content": "分组过滤路由器的优点是简单高效，且对于用户是透明的，但不能对高层数据进行过 滤。例如，不能禁止某个用户对某个特定应用进行某个特定的操作，不能支持应用层用户鉴 别等。这些功能需要使用应用网关技术来实现。"
    },
    {
        "summary": "应用网关",
        "content": "应用网关也称为代理服务器(proxy server), 它在应用层通信中扮演报文中继的角 色。 一种网络应用需要一个应用网关，例如在上一章6.4.3 节中“代理服务器”介绍过的万 维网缓存就是一种万维网应用的代理服务器。"
    },
    {
        "summary": "入侵检测方法分类",
        "content": "入侵检测方法一般可以分为基于特征的入侵检测和基于异常的入侵检测两种"
    },
    {
        "summary": "基于特征的IDS",
        "content": "基于特征的 IDS 维护一个所有已知攻击标志性特征的数据库。每个特征是一个与某种 入侵活动相关联的规则集，这些规则可能基于单个分组的首部字段值或数据中特定比特串， 或者与一系列分组有关。"
    },
    {
        "summary": "基于异常的IDS",
        "content": "基于异常的IDS通过观察正常运行的网络流量，学习正常流量的统计特性和规律，当检测到网络中流量某种统计规律不符合正常情况时，则认为可能发生了入侵行为。"
    },
    {
        "summary": "多媒体信息",
        "content": "然而技术的进步使许多用户开始利用因特网传送音频/视频信息。在许多情况下，这种 音频/视频常称为多媒体信息"
    },
    {
        "summary": "多媒体信息的特点",
        "content": "多媒体信息的信息量往往很大"
    },
    {
        "summary": "多媒体信息的特点",
        "content": "在传输多媒体数据时，对时延和时延抖动均有较高的要求。"
    },
    {
        "summary": "流媒体",
        "content": "流媒体其实就是上面所  说的流式音频/视频。"
    },
    {
        "summary": "流媒体的特点",
        "content": "流媒体的特点就是“边传送流媒体边播放”(streaming and playing),  但不能存储在硬盘上成为用户的文件。"
    },
    {
        "summary": "狭义的IP电话",
        "content": "狭义的 IP 电话就是指在IP 网络上打电话。所谓“IP 网络”就是“使用 IP 协议的分组 交换网”的简称。"
    },
    {
        "summary": "广义的IP电话",
        "content": "广义的IP 电话则不仅仅是电话通信，而且还可以是在IP 网络上进行交互式多媒体实时 通信(包括话音、视像等),甚至还包括即时传信 IM(Instant Messaging)。"
    },
    {
        "summary": "分组话音通信",
        "content": "早在20世纪70年代初期 ARPANET刚开始运行不久，美国 即着手研究如何在计算机网络上传送电话信息，即所谓的分组话音通信。"
    },
    {
        "summary": "IP电话网关",
        "content": "VocalTec公司成功地推出了 IP 电话网关 (IP Telephony Gateway),它是公用电话网①与IP 网络的接口设备。"
    },
    {
        "summary": "IP电话网关的作用",
        "content": "IP 电话网关的作用就是：(1)在电话呼叫阶段和呼叫释放阶段进行电话信令的转换。(2)在通话期间进行话音编码的转换。"
    },
    {
        "summary": "IP电话的通话质量的决定因素",
        "content": "IP电话的通话质量主要由两个 因素决定，一个是通话双方端到端的时延和时延抖动，另一个是话音分组的丢失率。"
    },
    {
        "summary": "IP电话端到端时延的决定因素",
        "content": "IP电话端到端时延是由以下几个因素造成的：(1)话音信号进行模数转换要产生时延。(2)已经数字化的话音比特流要积累到一定的数量才能够装配成一个话音分组，这也产 生时延。"
    },
    {
        "summary": "服务质量 QoS",
        "content": "服务质量 QoS 是服务性能的总效果，此效 果决定了一个用户对服务的满意程度。"
    },
    {
        "summary": "实时数据传输的传输层协议选择",
        "content": "在因特网上传输实时数据的分组时有可能会出现差错或甚至丢失。如果利用 TCP 协议对这些出错或丢失的分组进行重传，那么时延就会大大增加。因此实时数据的传输在运输层就应采用用户数据报协议UDP而不使用TCP协议。"
    },
    {
        "summary": "缓存的作用",
        "content": "因特网是非等时的要解决这一问题，可以在接收端设置适当大小的缓存①,当缓存中的分组数达到一定的 数量后再以恒定速率按顺序将这些分组读出进行还原播放。图8-2说明了缓存的作用。"
    },
    {
        "summary": "丢失容忍",
        "content": "很少量分组的丢失对播放效果的影响并不大(因为这是由人来进行主观评 价的),因而是可以容忍的。 丢失容忍(loss tolerant)也是实时数据的另一个重要特点。"
    },
    {
        "summary": "时间戳的作用",
        "content": "还有一种情况，就是要使接收端能够将节目中本来就存在的正常的短时间停顿(如音乐 中停顿几拍)和因某些分组的较大迟延造成的“停顿”区分开来。这就需要增加一个时间戳 (timestamp), 以便告诉接收端应当在什么时间播放哪个分组。"
    },
    {
        "summary": "媒体播放器",
        "content": "为什么不能直接在浏览器中播放音频/视频文件呢?这是因为这种播放器并没有集成 在万维网浏览器中。因此，必须使用一个单独的应用程序来播放这种音频/视频节目。这 个应用程序通常称为媒体播放器(media player)。"
    },
    {
        "summary": "流行的媒体播放器",
        "content": "现在流行的媒体播放器有 Real Networks 的RealPlayer、 微软的 Windows Media Player和苹果公司的QuickTime。"
    },
    {
        "summary": "媒体播放器的功能",
        "content": "媒体播放器具有 的主要功能是：管理用户界面、解压缩、消除时延抖动和处理传输带来的差错。"
    },
    {
        "summary": "传统下载方法的缺点",
        "content": "传统下载方法最大的缺点就是历时太长(几十分钟到几十小时),必须把所 下载的音频/视频文件全部下载完毕后才能开始播放(差几个字节都不行)"
    },
    {
        "summary": "元文件",
        "content": "所谓元文件(请注意，不是源文件)就是一种非常小的文件，它描述或 指明其他文件的一些重要信息。"
    },
    {
        "summary": "使用元文件下载音频/视频文件的步骤",
        "content": "浏览器用户点击所要看的音频/视频文件的超链，使用 HTTP   的 GET  报文接入到万 维网服务器。"
    },
    {
        "summary": "媒体服务器",
        "content": "媒体服务器也称为流式服务器(streaming server)。 媒体服务器和万维网服务器可以运行 在一个端系统内，也可以运行在两个不同的端系统中。"
    },
    {
        "summary": "媒体播放器与媒体服务器的关系",
        "content": "媒体播放器与媒体服务器的关系是 客户与服务器的关系。现在媒体播放器不是向万维网服务器而是向媒体服务器请求音频/视 频文件。媒体服务器和媒体播放器之间采用另外的协议进行交互。"
    },
    {
        "summary": "使用媒体服务器下载音频/视频文件的步骤",
        "content": "媒体播放器使用元文件中的 URL接入到媒体服务器，请求下载浏览器所请求的音频/视频文件"
    },
    {
        "summary": "实时流式协议RTSP",
        "content": "实时流式协议RTSP是IETF的MMUSIC作组(Multiparty MUltimedia SessIon Control WG, 多方多媒体会话控制工作组)开发的协议[W-  MMUSIC],现已成为因特网建议标准[RFC2326]。"
    },
    {
        "summary": "RTSP协议的特点",
        "content": "RTSP 协议以客户服务器方式工作，它是一个应用层的多媒体播放控制协议， 用来使用 户在播放从因特网下载的实时数据时能够进行控制(像在影碟机上那样的控制)"
    },
    {
        "summary": "RTSP协议的特点",
        "content": "RTSP的语法和操作与 HTTP协议的相似(所有的请求和响应报文都是ASCⅡ文本)。 但与HTTP不同的地方是RTSP是有状态的协议 (HTTP是无状态的)。"
    },
    {
        "summary": "使用RTSP的媒体服务器的工作过程",
        "content": "浏览器使用HTTP的GET报文向万维网服务器请求音频/视频文件；万维网服务器从浏览器发送携带有元文件的响应。"
    },
    {
        "summary": "Skype IP 电话的优势",
        "content": "在IP 电话领域里，最值得一提的就是Skype IP 电话，它给全世界的广大用户带来 了高品质并且廉价的通话服务。 Skype 使用了Global IP Sound 公司开发的互联网低比特率编 解码器 iLBC(internet Low Bit rate Codec)[RFC 3951,RFC 3952], 进行话音的编解码和压 缩，使其话音质量优于传统的公用电话网(采用电路交换)的话音质量。"
    },
    {
        "summary": "Skype技术特点",
        "content": "Skype 采用了P2P (见第10章10.3节的介绍)和全球索引 (Global Index)技术提供快 速路由选择机制(而不是单纯依靠服务器来完成这些工作),因而其管理成本大大降低，在 用户呼叫时，由于用户路由信息分布式存储于因特网的结点中，因此呼叫连接完成得很快。"
    },
    {
        "summary": "IP电话所需要的几种应用协议",
        "content": "在 IP 电话的通信中，我们至少需要两种应用协议。 一种是信令协议，它使我们能够在 因特网上找到被叫用户①。另一种是话音分组的传送协议，它使我们用来进行电话通信的话 音数据能够以时延敏感属性在因特网中传送。"
    },
    {
        "summary": "实时运输协议RTP",
        "content": "实时运输协议 RTP(Real-time Transport Protocol)是 IETF 的 AVT 工作组(Audio/Video Transport WG)开发的协议[W-AVT]"
    },
    {
        "summary": "RTP特点",
        "content": "RTP[RFC  3550,3551]为实时应用提供端到端的运输，但不提供任何服务质量的保证。"
    },
    {
        "summary": "有效载荷类型",
        "content": "有效载荷类型(payload type)     占7位。这个字段指出后面的RTP 数据属于何种格 式的应用。收到RTP 分组的应用层就根据此字段指出的类型进行处理。"
    },
    {
        "summary": "序号",
        "content": "序号   占16位。对每一个发送出的RTP 分组，其序号加1。在一次RTP 会话开始时的初始序号是随机选择的。"
    },
    {
        "summary": "时间戳",
        "content": "时间戳    占32位。时间戳反映了RTP 分组中的数据的第一个字节的采样时刻。"
    },
    {
        "summary": "同步源标识符",
        "content": "同步源标识符   占32位。同步源标识符SSRC(Synchronous SouRCe identifier)是 一个数，用来标志 RTP 流(stream)的来源。"
    },
    {
        "summary": "参与源标识符",
        "content": "参与源标识符   这是选项，最多可有15个。参与源标识符 CSRC(ContributingSouRCe identifier)也是一个32位数，用来标志来源于不同地点的RTP 流。"
    },
    {
        "summary": "实时运输控制协议RTCP",
        "content": "实时运输控制协议 RTCP(RTP Control Protocol)是与 RTP配合使用的协议[RFC 3550, RFC3551], 实际上，RTCP 协议也是RTP 协议不可分割的部分。"
    },
    {
        "summary": "RTCP协议的主要功能",
        "content": "TCP协议的主要功能是：服务质量的监视与反馈、媒体间的同步(如某一个RTP 发送 的声音和图像的配合),以及多播组中成员的标志。"
    },
    {
        "summary": "RTCP使用的五种分组类型",
        "content": "RTCP使用的五种分组类型，它们都使用同样的格式：结束分组BYE，特定应用分组，接收端报告分组 RR"
    },
    {
        "summary": "RR分组的作用",
        "content": "发送RR分组有两个目的。第一，可以使所有的接收端和发送端了解当前网络的状态。第二，可以使所有发送RTCP 分组的站点自适应地调整自己发送RTCP 分组的速率"
    },
    {
        "summary": "发送端报告分组SR",
        "content": "发送端报告分组SR用来使发送端周期性地向所有接收端用多播方式进行报告。"
    },
    {
        "summary": "源点描述分组SDES",
        "content": "源点描述分组SDES给出会话中参加者的描述，它包含参加者的规范名 CNAME (Canonical NAME)。 规范名是参加者的电子邮件地址的字符串。"
    },
    {
        "summary": "IP电话的信令标准",
        "content": "现在 IP电话有两套信令标准：一套是 ITU-T 定义的H.323 协议，另一套是 IETF 提出 的会话发起协议 SIP(Session Initiation Protocol)。 我们先介绍H.323 协议。"
    },
    {
        "summary": "H.323",
        "content": "H.323 是 ITU-T 于1996年制定的为在局域网上传送话音信息的建议书。"
    },
    {
        "summary": "H.323的内容",
        "content": "H.323 包括系统和构件的描 述、呼叫模型的描述、呼叫信令过程、控制报文、复用、话音编解码器、视像编解码器，以及数据协议等"
    },
    {
        "summary": "H.323标准的四种构件",
        "content": "H.323标准指明了四种构件，使用这些构件连网就可以进行点对点或一点对多点的多媒体通信。(1)H.323终端 (2)网关 (3)网闸(gatekeeper) (4)多点控制单元 MCU(Multipoint Control Unit)"
    },
    {
        "summary": "H.323组成部分",
        "content": "1)音频编解码器 (2)视频编解码器 (3)H.255.0登记信令 (4)H.225.0 呼叫信令"
    },
    {
        "summary": "SIP协议概述",
        "content": "由于 H.323 过于复杂(整 个文档多达736页),不便于发展基于IP 的新业务，因此 IETF 的 MMUSIC工作组制定了 另一套较为简单且实用的标准，即会话发起协议 SIP(Session Initiation Protocol)"
    },
    {
        "summary": "SIP协议的出发点",
        "content": "SIP 协议的出发点是以因特网为基础，而把 IP 电话视为因特网上的新应用。因此 SIP 协议只涉及到 IP 电话所需的信令和有关服务质量的问题，而没有提供像 H.323 那样多的功 能。"
    },
    {
        "summary": "SIP系统的构件",
        "content": "SIP系统只有两种构件，即用户代理(user agent) 和网络服务器(network server)。用户代理包括两个程序，即用户代理客户 UAC (User Agent Client)和用户代理服务器 UAS(User Agent Server), 前者用来发起呼叫，后者用来接受呼 叫。"
    },
    {
        "summary": "网络服务器的分类",
        "content": "网络服务器分为代理服务器(proxy server)和重定向服务器(redirect server)。"
    },
    {
        "summary": "代理服务器",
        "content": "代理服务器 接受来自主叫用户的呼叫请求(实际上是来自用户代理客户的呼叫请求),并将其转发给被 叫用户或下一跳代理服务器，然后下一跳代理服务器再把呼叫请求转发给被叫用户(实际上 是转发给用户代理服务器)。"
    },
    {
        "summary": "重定向服务器",
        "content": "重定向服务器不接受呼叫，它通过响应告诉客户下一跳代理服 务器的地址，由客户按此地址向下一跳代理服务器重新发送呼叫请求"
    },
    {
        "summary": "SIP的会话",
        "content": "SIP 的会话共有三个阶段：建立会话、通信和终止会话。图8-15给出了一个简单的 SIP 会话的例子。"
    },
    {
        "summary": "SIP地址的格式",
        "content": "SIP 的地址十分灵活。它可以是电话号码，也可以是电子邮件地址、 IP地址或其他类型 的地址。"
    },
    {
        "summary": "SIP的跟踪机制",
        "content": "SIP 有一种跟踪用户的机制，可以找出被叫方使用的PC 的 IP 地址(例如，被叫方使用 动态主机配置协议 DHCP,  因而没有固定的 IP 地址)。为了实现跟踪， SIP 使用登记的概 念。SIP 定义一些服务器作为 SIP 登记器(registrar)。"
    },
    {
        "summary": "SIP登记器的用途",
        "content": "图8-16说明了 SIP 登记器的用途。主叫方把 INVITE 报文发送给 SIP 代理服务器。这 个INVITE 报文中只有被叫方的电子邮件地址而没有其IP地址。"
    },
    {
        "summary": "会话描述协议SDP的作用",
        "content": "SDP 在电话 会议的情况下特别重要，因为电话会议的参加者是动态地加入和退出。 SDP 详细地指明了 媒体编码、协议的端口号以及多播地址。 SDP 现在也是因特网建议标准[RFC 2327]。"
    },
    {
        "summary": "先进先出的缺点",
        "content": "先进先出的最大缺点就是不能区分时间敏感分组和一般数据分组， 并且也 不公平，因为这使得排在长分组后面的短分组要等待很长的时间。"
    },
    {
        "summary": "漏桶管制分组流进入网络的过程",
        "content": "漏桶管制分组流进入网络的过程如下。分组进入网络前，先要进入一个队列中等候漏 桶中的权标。只要漏桶中有权标，就可从漏桶取走一个权标，然后就准许一个分组从队列进 入到网络。若漏桶已无权标，就要等新的权标注入到漏桶后，再把这个权标拿走后才能准许 下一个分组进入网络。"
    },
    {
        "summary": "WFQ的作用",
        "content": "前面已经讲过， WFQ可以使每一个分组流得到如公式(8-1)所示的有保证的数据率。"
    },
    {
        "summary": "IntServ的特点",
        "content": "IntServ 可对单个的应用会话提供服务质量的保证，其主要特点有二：(1)资源预留 (2)呼叫建立"
    },
    {
        "summary": "资源预留",
        "content": "(1)资源预留。 一个路由器需要知道给不断出现的会话已经预留了多少资源(即链路带 宽和缓存空间)。"
    },
    {
        "summary": "呼叫建立",
        "content": "(2)呼叫建立。 一个需要服务质量保证的会话，必须首先在源点到终点的路径上的每一 个路由器预留足够的资源，以保证其端到端的服务质量的要求。因此，在一个会话开始之前 必须先有一个呼叫建立(又称为呼叫接纳)过程，它需要在其分组传输路径上的每一个路由 器都参加。每一个路由器都要确定该会话所需的本地资源是否够用，同时还不要影响到已经 建立的会话的服务质量"
    },
    {
        "summary": "IntServ的两类服务",
        "content": "IntServ 定义了两类服务：(1)有保证的服务(guaranteed  service),(2)受控负载的服务(controlled-load service)"
    },
    {
        "summary": "有保证的服务",
        "content": "有保证的服务(guaranteed  service),  可保证一个分组在通过路由器时的排队时延有一 个严格的上限。"
    },
    {
        "summary": "受控负载的服务",
        "content": "受控负载的服务(controlled-load service), 可以使应用程序得到比通常的“尽最大努力交付\"更加可靠的服务。"
    },
    {
        "summary": "IntServ的组成部分",
        "content": "IntServ共有以下四个组成部分：(1)资源预留协议RSVP (2)接纳控制 (3)分类器 (4)调度器"
    },
    {
        "summary": "流",
        "content": "\"流\"  是在多媒体通信中的一个常用的名词， 一般定义为“具有同样的源 IP  地址、源端口号、目 的 IP 地址、目的端口号、协议标识符及服务质量需求的一连串分组”。"
    },
    {
        "summary": "IntServ体系结构组成",
        "content": "IntServ体系结构分为前台和后台两个部分。前台部分画在下面，包括两个功能块，即 分类器与分组转发， 分组的调度器。每一个进入路由器的分组都要通过这两个功能块。后台 部分画在上面(有灰色阴影的部分),包括四个功能块和两个数据库。"
    },
    {
        "summary": "路由选择协议的作用",
        "content": "路由选择协议，负责维持路由选择数据库。由此可查找出对应于每一个目的地址和 每一个流的下一跳地址。"
    },
    {
        "summary": "RSVP协议的作用",
        "content": "RSVP 协议，为每一个流预留必要的资源，并不断地更新通信量控制数据库。"
    },
    {
        "summary": "接纳控制的作用",
        "content": "接纳控制，当一个新的流产生时， RSVP  就调用接纳控制功能块，以便确定是否有 足够的资源可供这个流使用。"
    },
    {
        "summary": "管理代理的作用",
        "content": "管理代理，用来修改通信量控制数据库和管理接纳控制功能块，包括设置接纳控制 策略。"
    },
    {
        "summary": "DS结点",
        "content": "因此，具有区分服务功能的结点就称为DS结点"
    },
    {
        "summary": "区分服务DiffServ的要点",
        "content": "网络被划分为许多个 DS 域 (DS  Domain)。 一 个DS 域在一个管理实体的控制下实 现同样的区分服务策略。"
    },
    {
        "summary": "区分服务DiffServ的要点",
        "content": "DiffServ 力图不改变网络的基础结构，但在路由器中增加区分服务的功能。"
    },
    {
        "summary": "区分服务DiffServ的要点",
        "content": "(3)边界路由器中的功能较多，可分为分类器(classifier)和通信量调节器(conditioner)两 大部分。"
    },
    {
        "summary": "区分服务DiffServ的要点",
        "content": "(4)DiffServ 提供了一种聚合(aggregation)功能。"
    },
    {
        "summary": "行为",
        "content": "所谓  \"行为\"就是指在转发分组时路由器对分组是怎样处理的"
    },
    {
        "summary": "PHB类型",
        "content": "IETF 的 DiffServ工作组已经定义了两种PHB, 即迅速转发PHB和确保转发PHB"
    },
    {
        "summary": "PHB",
        "content": "DiffServ 定义了在转发分组时体现服务水平的每跳行为 PHB(Per-Hop Behavior)"
    },
    {
        "summary": "迅速转发PBH",
        "content": "迅速转发 PBH (Expedited Forwarding PHB)可记为 EF  PHB, 或 EF。 定义 EF 的 RFC 文 档是RFC  3246。EF指明离开一个路由器的通信量的数据率必须等于或大于某一数值。因此 EF  PHB 用来构造通过 DS 域的一个低丢失率、低时延、低时延抖动、确保带宽的端到端服 务(即不排队或很少排队)。"
    },
    {
        "summary": "确保转发PHB",
        "content": "确保转发 PHB可记为AF  PHB,, 或 AF 。定义AF 的 RFC 文 档是RFC  2597。AF用 DSCP 的第0~2位把通信量划分为四个等级(分别为001,010,011和 100),并给每一种等级提供最低数量的带宽和缓存空间。"
    },
    {
        "summary": "便携站和移动站的区别",
        "content": "便携站 (portable station) 和移动站 (mobile station) 表示的意思并不一 样。便携站当然是便于移动的，但便携站在工作时其位置是固定不变的。而移动站不仅能够 移动，而且还可以在移动的过程中进行通信(正在进行的应用程序感觉不到计算机位置的变 化，也不因计算机位置的移动而中断运行)。"
    },
    {
        "summary": "无线局域网的分类",
        "content": "无线局域网可分为两大类，第一类是有固定基础设施的，第二类是无固定基础设施的。"
    },
    {
        "summary": "固定基础设施",
        "content": "所谓“固定基础设施”是指预先建立起来的、能够覆盖一定地理范围的一批固定基站。 大家经常使用的蜂窝移动电话就是利用电信公司预先建立的、覆盖全国的大量固定基站来接 通用户手机拨打的电话。"
    },
    {
        "summary": "802.11简述",
        "content": "802.11是无线以太网的标准，它使用星形拓 扑，其中心叫做接入点AP(Access Point),在 MAC  层使用 CSMA/CA  协议(在9.1.3 节讨 论)。凡使用802.11 系列协议的局域网又称为 Wi-Fi(Wireless-Fidelity, 意思是“无线保真 度”)[W-WiFi]\""
    },
    {
        "summary": "基本服务集BSS",
        "content": "802.11标准规定无线局域网的最小构件是基本服务集 BSS (Basic Service Set)。一个基本 服务集 BSS 包括一个基站和若干个移动站，所有的站在本 BSS 以内都可以直接通信，但在 和本 BSS 以外的站通信时都必须通过本BSS 的基站。"
    },
    {
        "summary": "SSID",
        "content": "SSID 其实就 是指使用该 AP 的无线局域网的名字。"
    },
    {
        "summary": "基本服务区BSA",
        "content": "一个基本服务集 BSS 所覆盖的地理范围叫作一个基 本服务区BSA(Basic Service Area)"
    },
    {
        "summary": "无线局域网的优点",
        "content": "但若使用无线局域网，不仅节省了投 资，而且建网的速度也会较快。另外，当大量持有便携式计算机的用户在一个地方同时要求 上网时(如在图书馆或购买股票的大厅里),若用电缆连网，恐怕连铺设电缆的位置都很难 找到。而用无线局域网则比较容易。"
    },
    {
        "summary": "移动站与接入点AP建立关联的方法",
        "content": "移动站与接入点 AP 建立关联的方法有两种。 一种是被动扫描，另一种是主动扫描"
    },
    {
        "summary": "被动扫描",
        "content": "一种是被动扫描，即移动站等待接收接入点AP周期性发出的(例如每秒10次或100次)信标帧(beacon frame)。"
    },
    {
        "summary": "主动扫描",
        "content": "另一种是主动扫描，即移动站主 动发出探测请求帧(probe request frame), 然后等待从接入点发回的探测响应帧(probe response  frame)。"
    },
    {
        "summary": "热点",
        "content": "现在许多地方，如办公室、机场、快餐店、旅馆、购物中心等都能够向公众提供有偿 或无偿接入 Wi-Fi 的服务。这样的地点就叫做热点(hot spot)"
    },
    {
        "summary": "热区",
        "content": "由许多热点和接入点 AP 连接 起来的区域叫做热区(hot zone)。 热点也就是公众无线入网点。"
    },
    {
        "summary": "无线局域网适配器的作用",
        "content": "无线局域网的适配器能够实现802.11 的物 理层和 MAC  层的功能。只要在无线局域网信号覆盖的地方，用户就能够通过接入点 AP 连 接到因特网。"
    },
    {
        "summary": "无线因特网服务提供者WISP",
        "content": "但在一 些特定环境(例如一些机场、快餐店等),则有可能可免费通过无线局域网接入到因特网。 北京目前在六大区域(西单、王府井、奥运中心区、金融街、燕莎及中关村大街)已开通了 免费无线局域网，市民可在这些地区免费 Wi-Fi 上网(又称为 WLAN   上网，但不是3G 上 网)。以后，北京将累计建设超过20万个这类无线局域网接入点，这属于公益性免费无线服 务。"
    },
    {
        "summary": "WEP",
        "content": "若无线局域网不提供免费接入，那么用户就必须在和附近的接入点 AP 建立关联时，键 入已经在网络运营商注册登记的用户密码(这时的通信是加了密的)。如键入正确，才能和 在该网络中的 AP 建立关联。"
    },
    {
        "summary": "自组网络",
        "content": "另 一 类无线局域网是无固定基础设施的无线局域网，它又叫做自组网络(ad hoc network)\""
    },
    {
        "summary": "自组网络的特点",
        "content": "这种自组网络没有上述基本服务集中的接入点 AP, 而是由一些处于平等状态的，移动站之间相互通信组成的临时网络(图9-2)。"
    },
    {
        "summary": "自组网络的构成",
        "content": "自组网络通常是这样构成的：一些可移动的设备发现在它们附近还有其他的可移动设 备，并且要求和其他移动设备进行通信。"
    },
    {
        "summary": "工作组MANET概述",
        "content": "在 IETF 下面设有一个专门研究移动自组网络的工作组 MANET (Mobile Ad-hoc NETworks)[W- MANET],  读者可在MANET网站查阅到有关移动自组网络的技术资料。"
    },
    {
        "summary": "无线传感器网络",
        "content": "无线传感器网络是由大量传感器结点通过无线通信技术 构成的自组网络。"
    },
    {
        "summary": "无线传感器网络的应用",
        "content": "无线传感器网络的应用就是进行各种数据的采集、处理和传输， 一般并 不需要很高的带宽，但是在大部分时间必须保持低功耗，以节省电池的消耗。"
    },
    {
        "summary": "物联网应用举例",
        "content": "下面是物联网的一些应用举例：(1)环境监测与保护(如洪水预报、动物栖息的监控);(2)战争中对敌情的侦查和对兵力、装备、物资等的监控；(3)医疗中对病房的监测和对患者的护理；"
    },
    {
        "summary": "移动自组网络和移动IP的区别",
        "content": "移动自组网络和移动IP 并不相同。移动 IP 技术使漫游的主机可以用多种方 式连接到因特网。漫游的主机可以直接连接到或通过无线链路连接到固定网络上的另一个子 网。支持这种形式的主机移动性，需要地址管理和增加协议的互操作性，但移动 IP 的核心 网络功能，仍然是基于在固定互联网中一直在使用的各种路由选择协议。"
    },
    {
        "summary": "固定接入",
        "content": "固定接入(fixed access)——在作为网络用户期间，用户设置的地理位置保持不变。"
    },
    {
        "summary": "移动接入",
        "content": "移动接入(mobility access)    用户设备能够以车辆速度移动时进行网络通信。当发生切 换(即用户移动到不同蜂窝小区)时，通信仍然是连续的。"
    },
    {
        "summary": "便携接入",
        "content": "便携接入(portable access)——在受限的网络覆盖面积中，用户设备能够在以步行速度移 动时进行网络通信，提供有限的切换能力。"
    },
    {
        "summary": "游牧接入",
        "content": "游牧接入(nomadic access)     用户设备的地理位置至少在进行网络通信时保持不变。如 果用户设备移动了位置(改变了蜂窝小区),那么再次进行通信时可能还要寻找最佳的基站。"
    },
    {
        "summary": "无线局域网的分类",
        "content": "现在最流行的无线局域网是802.11b, 而另外两种(802.11a 和802.11g) 的 产品也广泛存在。2009年还颁布了新的标准802.11n。"
    },
    {
        "summary": "CSMA/CD协议的要点",
        "content": "CSMA/CD有两个要点，一是发送前先检测信道，信道空闲就立即发送，信 道忙就随机推迟发送；二是边发送边检测信道， 一发现碰撞就立即停止发送。"
    },
    {
        "summary": "链路层确认",
        "content": "802.11局域网在使用CSMA/CA的同时，还使用停止等待协议。这是因为无线信道的通 信质量远不如有线信道的，因此无线站点每通过无线局域网发送完一帧后，要等到收到对方 的确认帧后才能继续发送下一帧。这叫做链路层确认。"
    },
    {
        "summary": "MAC两个子层",
        "content": "MAC层在物理层的上面，它包括两个子层。(1)分布协调功能 DCF(Distributed Coordination Function)(2)点协调功能PCF(Point Coordination Function)"
    },
    {
        "summary": "分布协调功能DCF",
        "content": "(1)分布协调功能 DCF(Distributed Coordination Function)。DCF不采用任何中心控制， 而是在每一个结点使用 CSMA  机制的分布式接入算法，让各个站通过争用信道来获取发送 权。因此DCF向上提供争用服务。802.11协议规定，所有的实现都必须有 DCF功能。"
    },
    {
        "summary": "帧间间隔IFS",
        "content": "为了尽量避免碰撞，802.11 规定，所有的站在完成发送后，必须再等待一段很短的时 间(继续监听)才能发送下一帧。这段时间通称为帧间间隔IFS(InterFrame Space)"
    },
    {
        "summary": "SIFS作用",
        "content": "(1)SIFS, 即短(Short)帧间间隔，长度为28 μs。SIFS 是最短的帧间间隔，用来分隔开属 于一次对话的各帧"
    },
    {
        "summary": "DIFS作用",
        "content": "(2)DIFS,即分布协调功能帧间间隔，它比SIFS的帧间间隔要长得多，长度为128μs。 在 DCF方式中， DIFS用来发送数据帧和管理帧"
    },
    {
        "summary": "虚拟载波监听的机制",
        "content": "802.11 标准还采用了一种叫做虚拟载波监听 (Virtual Carrier Sense) 的机制，这就是让 源站把它要占用信道的时间(包括目的站发回确认帧所需的时间)及时通知给所有其他站， 以便使其他所有站在这一段时间都停止发送数据，这样就大大减少了碰撞的机会。"
    },
    {
        "summary": "退避计时器的作用",
        "content": "若检测到信道空闲，退避计时器就继续倒计时；若检测到信道忙，就冻结退避计时器的剩余时间，重新等待信道变为空闲并再经过时 间 DIFS 后，从剩余时间开始继续倒计时。"
    },
    {
        "summary": "CSMA/CA算法流程",
        "content": "根据以上讨论的情况，可把CSMA/CA算法归纳如下：(1)若站点最初有数据要发送(而不是发送不成功再进行重传),且检测到信道空闲， 在等待时间DIFS 后，就发送整个数据帧。(2)否则，站点执行 CSMA/CA  协议的退避算法。 一旦检测到信道忙，就冻结退避计时 器。只要信道空闲，退避计时器就进行倒计时。"
    },
    {
        "summary": "802.11帧类型",
        "content": "802.11 帧共有三种类型，即控制帧、数据帧和管理帧"
    },
    {
        "summary": "802.11数据帧的组成",
        "content": "(1)MAC首部(2)帧主体3)帧检验序列 FCS"
    },
    {
        "summary": "802.11数据帧的地址",
        "content": "802.11 数据帧最特殊的地方就是有四个地址字段。地址4 用于自组网络"
    },
    {
        "summary": "序号控制字段",
        "content": "序号控制字段占16位，其中序号子字段占12位(从0开始，每发送一个新帧就加 1,到4095后再回到0), 分片子字段占4位(不分片则保持为0。"
    },
    {
        "summary": "持续期字段",
        "content": "持续期字段占16 位。在9.1.3 节 第 2 小节“对信道进行预约”中已经讲过， CSMA/CA   协议允许发送数据的站点预约信道一段时间(包括传输数据帧和确认帧的时 间)。"
    },
    {
        "summary": "帧控制字",
        "content": "(3)帧控制字段共分为11个子字段。"
    },
    {
        "summary": "更多分片字段的作用",
        "content": "更多分片字段置 为 1 时表明这个帧属于一个帧的多个分片之一"
    },
    {
        "summary": "有线等效保密字段WEP的作用",
        "content": "有线等效保密字段 WEP(Wired Equivalent Privacy)占1位。若WEP=1,就表明采用了WEP加密算法。"
    },
    {
        "summary": "无线个人区域网WPAN",
        "content": "无线个人区域网 WPAN(Wireless Personal Area Network)就是在个人工作地方把属于个 人使用的电子设备(如便携式电脑、平板电脑、便携式打印机以及蜂窝电话等)用无线技术 连接起来自组网络，不需要使用接入点 AP, 整个网络的范围大约在10 m 左右。"
    },
    {
        "summary": "WPAN和无线局域网WLAN的区别",
        "content": "PAN和无线局域网 WLAN并不一样。 WPAN  是以个人为中心来使用的无线个人区域 网，它实际上就是一个低功率、小范围、低速率和低价格的电缆替代技术。但 WLAN   却是 同时为许多用户服务的无线局域网，它是一个大功率、中等范围、高速率的局域网。"
    },
    {
        "summary": "蓝牙技术",
        "content": "蓝牙的数据率为720 kb/s, 通信范围在10米左右。蓝牙使用TDM  方 式和跳频扩频 FHSS 技术组成不用基站的皮可网(piconet)"
    },
    {
        "summary": "低速WPAN概述",
        "content": "低速 WPAN主要用于工业监控组网、办公自动化与控制等领域，其速率是2～250 kb/s。 低速 WPAN 的标准是 IEEE 802.15.4。最近新修订的标准是 IEEE 802.15.4-2006。"
    },
    {
        "summary": "ZigBee技术特点",
        "content": "ZigBee 技术主要用于各种电 子设备(固定的、便携的或移动的)之间的无线通信，其主要特点是通信距离短(10～80 m),  传输数据速率低，并且成本低廉。"
    },
    {
        "summary": "ZigBee技术特点",
        "content": "ZigBee 的另一个特点是功耗非常低。在工作时，信号的收发时间很短；而在非工作 时 ，ZigBee 结点处于休眠状态"
    },
    {
        "summary": "ZigBee技术特点",
        "content": "ZigBee网络容量大。一个ZigBee 的网络最多包括有255个结点，其中一个是主设备，其余则是从设备"
    },
    {
        "summary": "ZigBee节点类型",
        "content": "ZigBee的结点按功能的强弱可划分为两大类，即全功能设备 FFD (Full-Function Device)和精简功能设备 RFD(Reduced-Function Device)。"
    },
    {
        "summary": "RFD结点特点",
        "content": "RFD结点是 ZigBee 网络中数量最多的端设备(如图9-15 中的9个黑色小圆点),它的电路简单，存储 容量较小，因而成本较低。"
    },
    {
        "summary": "FFD结点特点",
        "content": "FFD结点具备控制器 (Controller) 的功能，能够提供数据交 换，是ZigBee 网络中的路由器。"
    },
    {
        "summary": "高速WPAN概述",
        "content": "高速 WPAN 的标准是IEEE 802.15.3, 是专为在便携式多媒体装置之间传送数据而制定 的。"
    },
    {
        "summary": "无线城域网的两个标准",
        "content": "现在无线城域网共有两个正式标准：一个是2004年6月通过了802.16的修订版本，即 802.16d (它的正式名字是802.16-2004),是固定宽带无线接入空中接口标准(2～66 GHz  频段);另一个是2005年12月通过的802.16的增强版本，即802.16e"
    },
    {
        "summary": "移动通信的种类",
        "content": "移动通信的种类很多，如蜂窝移动通信、卫星移动通信、集群移动通信、无绳电话通信 等"
    },
    {
        "summary": "蜂窝移动通信",
        "content": "目前使用最多的是蜂窝移动通信，它又称为小区制移动通信"
    },
    {
        "summary": "蜂窝移动通信的特点",
        "content": "这种通信的特点是把整 个的网络服务区划分成许多小区 (cell, 也就是“蜂窝”),每个小区设置一个基站，负责本 小区各个移动站的联络与控制。移动站的发送或接收都必须经过基站进行收发。"
    },
    {
        "summary": "1G移动通信简介",
        "content": "第一代(1G) 蜂窝无线通信是为话音通信设计的模拟FDM 系统(这里的G 是 Generation 的缩写)"
    },
    {
        "summary": "2G移动通信简介",
        "content": "第二代(2G)蜂窝无线通信提供低速数字通信(短信服务),其代表性体制就是最流行的 GSM系统。2G 使用了 FDM/TDM\"  复用体制的空中接口。"
    },
    {
        "summary": "3G移动通信简介",
        "content": "3G移动通信和计算机网络的关系非常密切，因为它使用 IP 的体系结构和混 合的交换机制(电路交换和分组交换),能够提供移动宽带多媒体业务(话音、数据、视频 等，可收发电子邮件，浏览网页，进行视频会议等)。"
    },
    {
        "summary": "3G移动通信接口标准",
        "content": "3G现有三个无线接口国际标准，即美国提出的CDMA2000  (中国电信使用),欧洲提出的 WCDMA(中国联通使用)和中国提出的 TD-SCDMA"
    },
    {
        "summary": "蜂窝移动通信网的优点",
        "content": "用蜂窝移动通信网的手机作为终端来上网的优点是移动性好，随身携带方便，"
    },
    {
        "summary": "移动IP",
        "content": "移动IP(Mobile IP)又称为移动IP协议[RFC 2002,2003,3344], 是由IETF 开发的一种技 术，这种技术允许计算机移动到外地时，仍然保留其原来的IP 地址。"
    },
    {
        "summary": "归属代理",
        "content": "归属代理(home agent)通常就是连接在归属网络上的路由器。然而它作为代理的特定功能则是在应用层完成 的。因此，归属代理既是路由器，也是主机。"
    },
    {
        "summary": "被访网络",
        "content": "当移动站A移动到另一个地点，他所接入的网络称为被访网络(visited     network)或外地 网络(foreign network)。"
    },
    {
        "summary": "外地代理",
        "content": "被访网络中使用的代理叫做外地代理(foreign agent), 它通常就是连 接在被访网络上的路由器(当然也充当主机)。"
    },
    {
        "summary": "间接路由选择",
        "content": "像图9-18 所示的数据报转发过程，又称为间接路由选择。 这是因为源站并不知道移动 站的当前地址，而是把数据报发往移动站的归属网络，以后的寻址工作都由归属代理来完 成。"
    },
    {
        "summary": "直接路由选择",
        "content": "这种方 法就是让通信者B 创建一个通信者代理(correspondent agent), 让这个通信者代理向归属代理 询问到移动站在被访网络的转交地址。然后由通信者代理(而不是由归属代理)把数据报用 隧道技术发送到被访网络的外地代理，最后再由这个外地代理拆封，把数据报转发给移动 站。"
    },
    {
        "summary": "切换",
        "content": "所谓切换(handover)就是移动用户与相关 联的基站发生了改变。"
    },
    {
        "summary": "锚MSC",
        "content": "锚 MSC是在呼叫移动用户首次访问过的 MSC,  它 在 整 个呼叫持续过程中保持不变。"
    },
    {
        "summary": "IPv6特点",
        "content": "(1)更大的地址空间。 IPv6 把地址从IPv4 的32位增大到4倍，即增大到128位，使地 址空间增大了26倍。这样大的地址空间在可预见的将来是不会用完的。"
    },
    {
        "summary": "IPv6特点",
        "content": "(2)扩展的地址层次结构。 IPv6 由于地址空间很大，因此可以划分为更多的层次。"
    },
    {
        "summary": "IPv6特点",
        "content": "(6)支持即插即用(即自动配置)。"
    },
    {
        "summary": "IPv6特点",
        "content": "(3)灵活的首部格式。 IPv6 数据报的首部和 IPv4 的并不兼容。 IPv6 定义了许多可选的 扩展首部，不仅可提供比 IPv4 更多的功能，而且还可提高路由器的处理效率，这是因为路 由器对扩展首部不进行处理(除逐跳扩展首部外)"
    },
    {
        "summary": "IPv6特点",
        "content": "(4)改进的选项。 IPv6 允许数据报包含有选项的控制信息，因而可以包含一些新的选 项。但IPv6 的首部长度是固定的，其选项放在有效载荷中。我们知道， IPv4 所规定的选项 是固定不变的，其选项放在首部的可变部分。"
    },
    {
        "summary": "IPv6特点",
        "content": "(5)允许协议继续扩充。这一点很重要，因为技术总是在不断地发展(如网络硬件的更 新)而新的应用也还会出现。但我们知道， IPv4 的功能是固定不变的。"
    },
    {
        "summary": "IPv6特点",
        "content": "(7)支持资源的预分配。 IPv6 支持实时视像等要求保证一定的带宽和时延的应用。"
    },
    {
        "summary": "IPv6特点",
        "content": "(8)IPv6 首部改为8字节对齐(即首部长度必须是8字节的整数倍)。原来的IPv4 首部是4字节对齐。"
    },
    {
        "summary": "数据报的有效载荷",
        "content": "所有的扩展首部和数据合起来叫做数据报的有效载荷(payload)或净负荷。"
    },
    {
        "summary": "版本",
        "content": "(1)版本(version)  占4位。它指明了协议的版本，对IPv6该字段是6。"
    },
    {
        "summary": "通信量类(traffic class)",
        "content": "(2)通信量类(traffic class)   占8位。这是为了区分不同的IPv6 数据报的类别或优先级。目前正在进行不同的通信量类性能的实验。"
    },
    {
        "summary": "流标号(flow label)",
        "content": "(3)流标号(flow label)  占 2 0 位 。IPv6 的一个新的机制是支持资源预分配，并且允许 路由器把每一个数据报与一个给定的资源分配相联系。"
    },
    {
        "summary": "流",
        "content": "“流”就是互联网络上从特定源点到特定终点(单播或多播)的一系列数据报(如实时音频  或视频传输),而在这个“流”所经过的路径上的路由器都保证指明的服务质量"
    },
    {
        "summary": "有效载荷长度",
        "content": "(4)有效载荷长度(payload length)  占16位。它指明IPv6数据报除基本首部以外的字 节数(所有扩展首部都算在有效载荷之内)。这个字段的最大值是64KB(65535  字节)。"
    },
    {
        "summary": "下一个首部(next header)",
        "content": "(5)下一个首部(next header)   占8位。它相当于IPv4 的协议字段或可选字段。"
    },
    {
        "summary": "跳数限制",
        "content": "跳数限制(hop limit)       占8位。用来防止数据报在网络中无限期地存在。源点在每个数据报发出时即设定某个跳数限制(最大为255 跳)。"
    },
    {
        "summary": "源地址",
        "content": "源地址   占128位。是数据报的发送端的IP 地址。"
    },
    {
        "summary": "目的地址",
        "content": "目的地址   占128位。是数据报的接收端的IP地址。"
    },
    {
        "summary": "六种扩展首部",
        "content": "在RFC2460中定义了以下六种扩展首部：(1)逐跳选项。(2)路由选择。(3)分片。(4)鉴别。(5)封装安全有效载荷。(6)目的站选项。"
    },
    {
        "summary": "“下一个首部”字段的作用",
        "content": "此字段的值指出了在该扩展首部后面的字段是什 么"
    },
    {
        "summary": "分片扩展首部的字段",
        "content": "IPv6保留了IPv4 分片的大部分特征，其分片扩展首部共有以下几个字段：(1)下一个首部(8位) (2)保留(10位)(3)片偏移(13位)(4)M(1  位 )(5)标识符(32 位 )"
    },
    {
        "summary": "端到端分片方法的优点",
        "content": "采用端到端分片的方法可以减少路由器的开销，因而允许路由器在单位时间内处理更 多的数据报。"
    },
    {
        "summary": "IPv6数据报的目的地址的基本类型",
        "content": "一般来讲，一个IPv6 数据报的目的地址可以是以下三种基本类型地址之一：(1)单播(unicast)    单播就是传统的点对点通信。(2)多播(multicast)  多播是一点对多点的通信，数据报发送到一组计算机中的每一 个 。IPv6 没有采用广播的术语，而是将广播看作多播的一个特例。(3)任播(anycast)   这是 IPv6 增加的一种类型。任播的终点是一组计算机，但数据报 只交付其中的一个，通常是距离最近的一个。"
    },
    {
        "summary": "单播",
        "content": "(1)单播(unicast)    单播就是传统的点对点通信。"
    },
    {
        "summary": "多播",
        "content": "(2)多播(multicast)  多播是一点对多点的通信，数据报发送到一组计算机中的每一 个 。IPv6 没有采用广播的术语，而是将广播看作多播的一个特例。"
    },
    {
        "summary": "任播",
        "content": "(3)任播(anycast)   这是 IPv6 增加的一种类型。任播的终点是一组计算机，但数据报 只交付其中的一个，通常是距离最近的一个。"
    },
    {
        "summary": "IPv6的分片方法",
        "content": "IPv6 把分片限制为由源点来完成。源点可以采用保证的最小 MTU(Maximum   TransferUnit)(1280 字节),或者在发送数据前完成路径最大传送单元发现(Path MTU Discovery), 以确定沿着该路径到终点的最小 MTU。  当需要分片时，源点在发送数据报前先把数据报分 片，保证每个数据报片都小于此路径的 MTU。  因此，分片是端到端的，路径途中的路由器 不允许进行分片。"
    },
    {
        "summary": "IPv6的地址空间",
        "content": "在 IPv6 中，每个地址占128 位，地址空间大于3.4×10³⁸ 。如果整个地球表面(包括陆 地和水面)都覆盖着计算机，那么IPv6允许每平方米拥有7x10²³个IP 地址。如果地址分配 速率是每微秒分配100万个地址，则需要1019年的时间才能将所有可能的地址分配完毕。 可见在想象到的将来， IPv6的地址空间是不可能用完的。"
    },
    {
        "summary": "IPv6的地址表示方法",
        "content": "为了使地址再稍简洁些， IPv6使用冒号十六进制记法(colon hexadecimal notation,简写 为colon hex), 它把每个16位的值用十六进制值表示，各值之间用冒号分隔。"
    },
    {
        "summary": "冒号十六进制记法的优点",
        "content": "号十六进制记法可结合使用点分十进制记法的后缀"
    },
    {
        "summary": "IPv6的几种特殊地址",
        "content": "我们这里要介绍一下IPv6 的几种特殊地址[RFC 5156]。(1)未指明地址 (2)环回地址 (3)基于 IPv4 的地址 (4)本地链路单播地址"
    },
    {
        "summary": "未指明地址",
        "content": "这是16字节的全0地址，可缩写为两个冒号“::”或“::/128”。"
    },
    {
        "summary": "环回地址",
        "content": "IPv6 的环回地址是0:0:0:0:0:0:0:1(即：:1或：:1/128),作用和IPv4 的环回地址一样。"
    },
    {
        "summary": "基于IPv4 的地址",
        "content": "前缀为一串0的保留地址作为与IPv4 兼容的地址。这是因为必须要考虑到在比较长的时期IPv4和 IPv6将会同时存在，而有的结点不支持IPv6。"
    },
    {
        "summary": "本地链路单播地址",
        "content": "这种地址FE80::/10 的使用情况是这样的。有些单位的网络使用 TCP/IP 协议， 但并没有连接到因特网上。"
    },
    {
        "summary": "IPv6单播地址的建议划分方法",
        "content": "(1)全球路由选择前缀(Global  Routing  Prefix) (2)子网标识符(Subnet ID)   (3)接口标识符(Interface ID)"
    },
    {
        "summary": "全球路由选择前缀",
        "content": "全球路由选择前缀(Global  Routing  Prefix)       这是第一级地址，占48位，分配给各 公司和机构，用于因特网中路由器的路由选择。"
    },
    {
        "summary": "子网标识符(Subnet ID)",
        "content": "(2)子网标识符(Subnet ID)   这是第二级地址，占16位，用于各公司和机构创建自己 的子网。对于小公司，可以把这个字段置为全0"
    },
    {
        "summary": "接口标识符(Interface ID)",
        "content": "(3)接口标识符(Interface ID)   这是第三级地址，占64位，指明主机或路由器单个的 网络接口。实际上这就相当于分类的IPv4 地址中的主机号字段。"
    },
    {
        "summary": "IPv4地址和IPv6地址的区别",
        "content": "与 IPv4 不同， IPv6 地址的主机号字段有64位之多，它足够大，因而可以将各种接口 的硬件地址直接进行编码。这样， IPv6 只需把128位地址中的最后64位提取出就可得到相 应的硬件地址，而不需要使用地址解析协议 ARP进行地址解析。"
    },
    {
        "summary": "双协议栈",
        "content": "双协议栈(dual stack)是指在完全过渡到 IPv6 之前，使一部分主机(或路由器)装有两 个协议栈， 一个IPv4 和一个IPv6。"
    },
    {
        "summary": "隧道技术的要点",
        "content": "图10- 10 给出了隧道技术的工作原 理。这种方法的要点就是在IPv6 数据报要进入IPv4 网络时，将 IPv6 数据报封装成为 IPv4 数据报(整个的 IPv6 数据报变成了 IPv4 数据报的数据部分)。然后， IPv6 数据报就在 IPv4 网络的隧道中传输。"
    },
    {
        "summary": "ICMPv6特点",
        "content": "ICMPv6是面向报文的协议，它利用报文来报告差错，获取信息，探测邻站或管理多播 通信。"
    },
    {
        "summary": "四种类型的差错",
        "content": "有四种类型的差错可以处理：终点不可达  (无路由到达终点、在管理上禁止与终点通信、地址不可达、端口不可达等),分组太大， 超时(跳数限制超过和分片重装时间超过)和参数问题(首部字段差错、下一个首部类型无 法识别、 IPv6   选项无法识别等)"
    },
    {
        "summary": "ICMPv6报文中的信息报文类型",
        "content": "ICMPv6报文中的信息报文有两种：回送请求报文和回送回答报文"
    },
    {
        "summary": "回送请求报文的作用",
        "content": "回送请求和回送回 答报文被设计用于检测因特网上的两个设备之间是否能够互相通信。主机或路由器可以向另 一个主机发送回送请求报文，而收到该请求的计算机或路由器则用回送回答报文进行响应。"
    },
    {
        "summary": "回送回答报文的作用",
        "content": "回送请求和回送回 答报文被设计用于检测因特网上的两个设备之间是否能够互相通信。主机或路由器可以向另 一个主机发送回送请求报文，而收到该请求的计算机或路由器则用回送回答报文进行响应。"
    },
    {
        "summary": "ICMPv6的邻站发现报文类型",
        "content": "ICMPv6的邻站发现报文有以下几种：路由器询问报文(用来发现网络中能够为该主机 转发 IPv6 报文的路由器),路由器通告报文(响应路由器询问报文),邻站询问报文(与 ARP 请求报文的任务一样),邻站通告报文(响应邻站询问报文),改变路由报文(与版本4 的一样),反向邻站询问报文(知道了邻站的链路层地址，但是需要知道该邻站的 IP 地 址),反向邻站通告报文(响应反向邻站询问报文)。"
    },
    {
        "summary": "ICMPv6的组成员关系报文类型",
        "content": "ICMPv6的组成员关系报文有两种：成员关系查询报文(由路由器发送的，目的是为了 找出网络中活跃的组成员)和成员关系报告报文。"
    },
    {
        "summary": "多协议标记交换MPLS",
        "content": "按照以上思路， IETF于1997 年成立了 MPLS 工作组，以便开发出一种新的协议标  准。这种新的协议取名为多协议标记交换MPLS(MultiProtocol Label Switching)。“多协议” 表示在 MPLS的上面可以采用多种协议。"
    },
    {
        "summary": "MPLS的特点",
        "content": "现在MPLS受到网络界人士的高度重视，因为MPLS 具有以下三个方面的特点：(1)支持面向连接的服务质量。(2)支持流量工程，平衡网络负载。(3)有效地支持虚拟专用网VPN。"
    },
    {
        "summary": "MPLS的特点",
        "content": "MPLS的一个重要特点就是不用长度可变的 IP 地址前缀来查找转发表中的匹配项目，而是给每一个 IP  数据报打上固定长度\"标记\", 然后对打上标记的 IP  数据报用硬件进行转 发，"
    },
    {
        "summary": "MPLS域",
        "content": "MPLS域(MPLS   domain)是指该域中有许多彼此相邻的路由器，并且所有的路由器都是 支持MPLS 技术的标记交换路由器 LSR (Label Switching Router)。"
    },
    {
        "summary": "LSR功能",
        "content": "LSR 同时具有标记交换和 路由选择这两种功能，标记交换功能是为了快速转发，但在这之前 LSR  需要使用路由选择 功能构造转发表。"
    },
    {
        "summary": "MPLS的基本工作过程",
        "content": "图10- 14中给出了MPLS的基本工作过程如下：(1)MPLS  域中的各 LSR 使用专门的标记分配协议 LDP (Label  Distribution  Protocol)交换 报文，并找出和特定标记相对应的路径，即标记交换路径 LSP(Label Switched Path)(2)当一个IP 数据报进入到MPLS  域时， MPLS  入口结点(ingress node)就给它打上标记  (后面我们就会知道，这实际上是插入一个 MPLS  首部),并按照转发表把它转发给下一个 LSR。 以后的所有LSR 都按照标记进行转发。"
    },
    {
        "summary": "转发等价类FEC",
        "content": "所谓 “转发等价类”就是路由器按照同样方式对待的 IP 数据报的集合。"
    },
    {
        "summary": "FEC的实例",
        "content": "(1)目的 IP 地址与某一个特定 IP 地址的前缀匹配的 IP 数据报(这就相当于普通的 IP 路由器);"
    },
    {
        "summary": "FEC的实例",
        "content": "(2)所有源地址与目的地址都相同的IP 数据报；"
    },
    {
        "summary": "FEC的实例",
        "content": "(3)具有某种服务质量需求的IP 数据报”。"
    },
    {
        "summary": "FEC的粒度",
        "content": "显然， FEC可以有不同的粒度。细粒度的例子是为特定源主机和目的主机之间的特定 应用指派的 FEC。粗粒度的例子则是与特定出口 LSR (不管数据流是从哪一个源结点发送 过来的)相关联的FEC。"
    },
    {
        "summary": "MPLS首部字段",
        "content": "MPLS首部共包括以下四个字段：(1)标记值(2) 试验(3)栈 S(4)生存时间TTL"
    },
    {
        "summary": "MPLS的功能",
        "content": "MPLS还有一个功能就是可以使用多个标记，并把这些标记都放入标记栈(label stack)。 其实MPLS 的标记栈就在MPLS  首部的位置。"
    },
    {
        "summary": "P2P工作方式概述",
        "content": "在 P2P工作方式下，所 有的音频/视频文件都是在普通的因特网用户之间传输。这其实是相当于有很多(有时达到 上百万个)分散在各地的媒体服务器(由普通用户的 PC 充当这种媒体服务器)向其他用户 提供所要下载的音频/视频文件。"
    },
    {
        "summary": "Napster简介",
        "content": "最早出现的P2P 工作方式叫做 Napster, 是1999年美国东北大学的新生 Shawn Fanning 写的一个Napster软件。用户利用这个软件可通过因特网免费下载 MP3 音乐。Napster 的出 现使MP3 成为网络音乐事实上的标准。"
    },
    {
        "summary": "Napster功能",
        "content": "Napster 能够搜索音乐文件，能够提供检索功能。所有的音乐文件地址集中存放在一个 Napster 目录服务器中。使用者可以很方便地下载自己需要的 MP3 文件。"
    },
    {
        "summary": "Gnutella",
        "content": "Gnutella 是一种采用全分布方法定位内容的 P2P 文件共享应用程序。"
    },
    {
        "summary": "Gnutella 与 Napster的区别",
        "content": "Gnutella 与 Napster 最大的区别就是不使用集中式的目录服务器，而是使用洪泛法在大量 Gnutella 用户之间进行查询。"
    },
    {
        "summary": "第三代P2P共享文件程序",
        "content": "为了更加有效地在大量用户之间使用 P2P 技术下载共享文件，最近几年已经开发出很 多种第三代P2P 共享文件程序[KURO10], 如 KaZaA,BT(BitTorrent)以及电驴 eDonkey ( 或 eDonkey2000,eD2K)  等"
    },
    {
        "summary": "eMule技术特点",
        "content": "eMule 使用分散定位和分散传输技术。 eMule 最大的特点就是把每一个文件划分为许多 小文件块(长度为9.28 MB),   并使用多源文件传输协议 MFTP(Multisource File Transfer Protocol)进行传送。"
    },
    {
        "summary": "eMule技术特点",
        "content": "eMule 使用了一些服务器。这些服务器并不是保存音频/视频文件，而是保存用户的有关信息，因而可以告诉用户从哪些地方可以下载到所需的文件"
    },
    {
        "summary": "eMule技术特点",
        "content": "eMule使用了专门定义的文件夹，让用户存放可以和其他用户共享的文件。所以用户不 必担心因特网上的其他用户会把自己私人使用的文件被暗中复制走了。"
    },
    {
        "summary": "追踪器",
        "content": "每一个洪流都有一个基础设施结点，叫做追踪器(tracker)。"
    },
    {
        "summary": "计算机系统组成",
        "content": "计算机系统由“硬件”和“ 软件”两大部分组成。"
    },
    {
        "summary": "硬件",
        "content": "所谓“硬件”,是指计算机的实体部分，它由看得见摸得着的各种电子元器件，各类光、电、机 设备的实物组成，如主机、外部设备等"
    },
    {
        "summary": "软件",
        "content": "所谓“软件”,它看不见摸不着，由人们事先编制的具有各类特殊功能的程序组成。通常把 这些程序寄寓于各类媒体(如 RAM 、ROM、磁带、磁盘、光盘，甚至纸带等),它们通常存放在计算 机的主存或辅存内。"
    },
    {
        "summary": "软件分类",
        "content": "计算机的软件通常又可以分为两大类.系统软件和应用软件。"
    },
    {
        "summary": "系统软件",
        "content": "系统软件又称为系统程序，主要用来管理整个计算机系统，监视服务，使系统资源得到合理  调度，高效运行。它包括：标准程序库、语言处理程序(如将汇编语 · 言翻译成机器语言的汇编程  序或将高级语言翻译成机器语言的编译程序)、操作系统(如批处理系统、分时系统、实时系统)、 服务程序(如诊断程序、调试程序、连接程序等)、数据库管理系统、网络软件等。"
    },
    {
        "summary": "应用软件",
        "content": "应用软件又称为应用程序，它是用户根据任务需要所编制的各种程序，如科学计算程序、数 据处理程序、过程控制程序、事务管理程序等"
    },
    {
        "summary": "源程序和目标程序",
        "content": "通常由用户用高级语言编写程序(称为源程序),然后将它和数据一起送入计算机内，再由 计算机将其翻译成机器能识别的机器语言程序(称为目标程序),机器自动运行该机器语言程 序，并将计算结果输出。"
    },
    {
        "summary": "汇编语言",
        "content": "20世纪50年代开始出现了符号式的程序设计语言，即汇编语言。它用符号 ADD、SUB、 MUL 、DIV 等分别表示加、减、乘、除等操作，并用符号表示指令或数据所在存储单元的地址，使程 序员可以不再使用繁杂而又易错的二进制代码来编写程序。"
    },
    {
        "summary": "虚拟机",
        "content": "因此，M₂并不是 一 台实际机器，它只是人们感到存在的 一 台具有翻译功能的机器，称这类机 器为虚拟机。"
    },
    {
        "summary": "汇编语言的缺点",
        "content": "另一方面，由于汇编语言摆脱不了实际机器的 指令系统，因此，汇编语言没有通用性，每台机器必须有一种与之相对应的汇编语言。这使得程 序员要掌握不同机器的指令系统，不利于计算机的广泛应用和发展。"
    },
    {
        "summary": "高级语言的优点",
        "content": "这类高级语言对问题的描述十分接近人们的习惯，并且还具有较强的通用性。程序员完 全不必了解、掌握实际机器 M, 的机型、内部的具体组成及其指令系统，只要掌握这类高级语言 的语法和语义，便可直接用这种高级语言来编程，这给程序员带来了极大的方便。"
    },
    {
        "summary": "翻译程序",
        "content": "通常，将高级语言程序翻译成机器语言程序的软件称为翻译程序。"
    },
    {
        "summary": "翻译程序的类型",
        "content": "翻译程序有两种：一种是 编译程序，另一种是解释程序。"
    },
    {
        "summary": "编译程序",
        "content": "编译程序是将用户编写的高级语言程序(源程序)的全部语句一 次全部翻译成机器语言程序，而后再执行机器语言程序。"
    },
    {
        "summary": "解释程序",
        "content": "解释程序是将源程 序的一条语句翻译成对应于机器语言的一条语句，并且立即执行这条语句，接着翻译源程序的下 一条语句，并执行这条语句，如此重复直至完成源程序的全部翻译任务。"
    },
    {
        "summary": "计算机系统的属性",
        "content": "计算机系统的属性通常是指用机器语言编程的程序员(也包括汇编语言程序设计者和 汇编程序设计者)所看到的传统机器的属性，包括指令集、数据类型、存储器寻址技术、I/O 机理  等，大都属于抽象的属性。"
    },
    {
        "summary": "计算机组成概述",
        "content": "计算机组成是指如何实现计算机体系结构所体现的属性，它包含了许多对程序员来说是透 明的硬件细节。"
    },
    {
        "summary": "硬件研究的主要对象",
        "content": "从计算机系统的多级层次结构来看，可以将硬件研究的主要对象归结为传统机器和微程序机器"
    },
    {
        "summary": "软件的研究对象",
        "content": "软件的研究对象主要是操作系统级以上的各级虚拟机"
    },
    {
        "summary": "冯 ·诺依曼计算机的特点",
        "content": "以此概念为基础的各类计算机通称为冯 · 诺依曼机。它的特点可归结如下：计算机由运算器、存储器、控制器、输人设备和输出设备五大部件组成。指令和数据以同等地位存放于存储器内，并可按地址寻访。指令和数据均用二进制数表示。"
    },
    {
        "summary": "计算机的五大部件",
        "content": "典型的冯 ·诺依曼计算机结构框图：输入设备，输出设备，运算器，存储器，控制器"
    },
    {
        "summary": "运算器的作用",
        "content": "运算器用来完成算术运算和逻辑运算，并将运算的中间结果暂存在运算器内。"
    },
    {
        "summary": "存储器的作用",
        "content": "存储器用来存放数据和程序。"
    },
    {
        "summary": "控制器的作用",
        "content": "控制器用来控制、指挥程序和数据的输入、运行以及处理运算结果。"
    },
    {
        "summary": "输入设备的作用",
        "content": "输人设备用来将人们熟悉的信息形式转换为机器能识别的信息形式，常见的有键盘、鼠 标 等 。"
    },
    {
        "summary": "输出设备的作用",
        "content": "输出设备可将机器运算结果转换为人们熟悉的信息形式，如打印机输出、显示器输出等。 计算机的五大部件(又称五大子系统)在控制器的统 一 指挥下，有条不紊地自动工作。"
    },
    {
        "summary": "中央处理器",
        "content": "由于运算器和控制器在逻辑关系和电路结构上联系十分紧密，尤其在大规模集成电路制作工艺出现后，这两大部件往往集成在同 一 芯片上，因此，通常将它们合起来统称为中央处理器"
    },
    {
        "summary": "VO设备",
        "content": "把输入设备与输出设备简称为VO设 备"
    },
    {
        "summary": "计算机三大组成部分",
        "content": "现代计算机可认为由三大部分组成：CPU、I/O设 备及主存储器"
    },
    {
        "summary": "算术逻辑单元",
        "content": "算术逻辑单元(Arithmetic    Logic    Unit,ALU)简称算逻部件，用来完成算术逻辑运算"
    },
    {
        "summary": "控制单元",
        "content": "控制单元(Control Unit,CU)用来解释存储器中的指令，并发出各种操作命令来执行指令。"
    },
    {
        "summary": "操作码",
        "content": "操作码表示机器所执行的各种操作，如取数、存数、加、减、乘、除、 停机、打印等。"
    },
    {
        "summary": "地址码",
        "content": "地址码表示参加运算的数在存储器内的位置。"
    },
    {
        "summary": "主存储器",
        "content": "主存储器(简称主存或内存)包括存储体M、各种逻辑部件及控制电路等。"
    },
    {
        "summary": "存储体",
        "content": "存储体由许多存  储单元组成，每个存储单元又包含若干个存储元件(或称存储基元、存储元),每个存储元件能寄 存一位二进制代码“0”或“1”。"
    },
    {
        "summary": "按地址存取方式",
        "content": "主存的工作方式就是按存储单元的地址号来实现对存储字各位的存(写人)、取(读出)。这种 存取方式称为按地址存取方式，即按地址访问存储器(简称访存)。"
    },
    {
        "summary": "MAR",
        "content": "MAR(Memo-  ry  Address  Register)是存储器地址寄存器，用来存放欲访问的存储单元的地址，其位数对应存储 单元的个数(如 MAR 为10位，则有2¹⁰=1024个存储单元，记为1 K) 。"
    },
    {
        "summary": "MDR",
        "content": "MDR(Memory  Data  Reg- ster)  是存储器数据寄存器，用来存放从存储体某单元取出的代码或者准备往某存储单元存入的 代码，其位数与存储字长相等。"
    },
    {
        "summary": "运算器的组成",
        "content": "运算器最少包括3个寄存器(现代计算机内部往往设有通用寄存器组)和一个算术逻辑单 元(ALU) 。 其 中ACC(Accumulator)  为累加器，MQ(Multiplier-Quotient    Register)为乘商寄存器，X 为操作数寄存器。"
    },
    {
        "summary": "加法操作过程",
        "content": "加法操作过程为[M]→X，[ACC]+[X]→ACC"
    },
    {
        "summary": "减法操作过程",
        "content": "减法操作过程为[M]→X，[ACC]-[X]→ACC"
    },
    {
        "summary": "乘法操作过程",
        "content": "乘法操作过程为[M]→MQ ，[ACC]→X, 0→ACC，[X]×[MQ]→ACC//MQ"
    },
    {
        "summary": "除法操作过程",
        "content": "除法操作过程为[M]→X，[ACC]÷[X]→MQ，余数R 在 ACC 中"
    },
    {
        "summary": "取指过程",
        "content": "控制器是计算机的神经中枢，由它指挥各部件自动、协调地工作。具体而言，它首先要命令 存储器读出一条指令，称为取指过程(也称取指阶段)。"
    },
    {
        "summary": "控制器的组成",
        "content": "控制器由程序计数器(Program    Counter,PC)、指令寄存器(Instruction     Register,IR)以及控制 单元(CU) 组成。"
    },
    {
        "summary": "PC的功能",
        "content": "PC用来存放当前欲执行指令的地址，它与主存的 MAR 之间有一条直接通路， 且具有自动加1的功能，即可自动形成下一条指令的地址。"
    },
    {
        "summary": "I/0的组成",
        "content": "I/0 子系统包括各种 I/0 设备及其相应的接口"
    },
    {
        "summary": "机器字长",
        "content": "机器字长是指 CPU 一次能处理数据的位数，通常与CPU 的寄存器位数有关。字长越长，数的表 示范围越大，精度也越高。"
    },
    {
        "summary": "存储容量",
        "content": "存储器的容量应该包括主存容量和辅存容量。"
    },
    {
        "summary": "主存容量",
        "content": "主存容量是指主存中存放二进制代码的总位数"
    },
    {
        "summary": "辅存容量",
        "content": "辅存容量通常用字节数来表示"
    },
    {
        "summary": "影响计算机运算速度的因素",
        "content": "计算机的运算速度与许多因素有关，如机器的主频、执行什么样的操作、主存本身的速度 (主存速度快，取指、取数就快)等都有关。"
    },
    {
        "summary": "MIPS",
        "content": "现在机器的运算速度普遍采用单位时间内执行指令的平均条数来衡量，并用MIPS(Million In- struction Per Second,百万条指令每秒)作为计量单位。例如，某机每秒能执行200万条指令，则记作 2  MIPS。"
    },
    {
        "summary": "计算机的产生和发展",
        "content": "第一代电子管计算机；第二代晶体管计算机；第三代集成电路计算机"
    },
    {
        "summary": "制造商 Intel的典型产品",
        "content": "最值得一提的是世界上第一大微处理器的制造商 Intel,  其典型产品如下。8080:世界上第一个8位通用的微处理器，1974年问世。8086:16位，2.9万个晶体管，地址20位，采用6个字节指令队列，指令系统与8088完全 兼容，1978年问世。"
    },
    {
        "summary": "软件发展的特点",
        "content": "研制一个软件往往因其规模庞大而需较长的开发周期。例如，美国穿梭号宇宙飞船的软件 包含4000万行目标代码，倘若一个人一年开发一万行程序，则需集中4000人花一年时间才能.完成"
    },
    {
        "summary": "软件发展的特点",
        "content": "是软件的开发完全依赖于 人工，致使软件开发成本不断上涨，在美国，软件成本约占计算机系统总成本的90%,已成为司 空见惯的现象。"
    },
    {
        "summary": "软件发展的特点",
        "content": "一种软件在刚开始推出时，主要实现其面向领域所需的核心功能，之后逐步集成大量的附加 功能。也就是说，要完善一个软件产品，必须在应用过程中不断加以修改、补充"
    },
    {
        "summary": "科学计算的特点",
        "content": "科学计算一直是计算机的重要应用领域之一。其特点是计算量大和数值变化范围大。"
    },
    {
        "summary": "数据处理的特点",
        "content": "数据处理也是计算机的重要应用领域之一。早在20世纪五六十年代，人们就把大批复杂的 事务数据交给了计算机处理，如政府机关公文、报表和档案。"
    },
    {
        "summary": "电子商务",
        "content": "电子商务的含义是任何一个组织机构可利用 Internet来改变他们与客户、供应商、业务伙伴 和内部员工的交流，也可以认为是消费者、销售者和结算部门之间利用Internet完成商品采购和 支付的过程。"
    },
    {
        "summary": "网络教育",
        "content": "传统的老师讲、学生听的课堂授教模式随着全球网络化的发展，将会在“知识爆炸”①时代逐 渐被淘汰或更新。"
    },
    {
        "summary": "敏捷制造的组成",
        "content": "敏捷制造由两部分组成：敏捷制造 的基础结构和敏捷制造的虚拟企业。前者为形成虚拟企业提供环境和条件，后者对市场不可预 期的变化做出迅速响应。"
    },
    {
        "summary": "虚拟现实",
        "content": "虚拟现实是利用计算机生成的一种模拟环境，通过多种传感设备使用户“投入”到该环境 中，达到用户与环境直接进行交互的目的。"
    },
    {
        "summary": "办公自动化",
        "content": "办公自动化是利用计算机及自动化的办公设备来替代“笔、墨、纸、砚”及办公人 员的部分脑力、体力劳动，从而提高了办公的质量和效率。"
    },
    {
        "summary": "CAD",
        "content": "计算机辅助设计(Computer Aided Design,CAD)按设计任务书的要求，可进行各种设计方案 的比较，确定产品结构、外形尺寸、材料选择、模拟组装；再对模拟整机进行各种性能测试，包括强 度分析、振动分析、运动状态分析等"
    },
    {
        "summary": "CAM",
        "content": "计算机辅助制造(Computer   Aided   Manufacturing,CAM)是以数控机床为主体，利用存有全部 加工资料的数据库(如刀具、夹具和各种零件的加工程序，以及在加工过程中的自动换刀及加工 数据的控制),实现对产品加工的自动化。"
    },
    {
        "summary": "CIMS",
        "content": "计算机集成制造系统(Computer   Integrated   Manufacturing   Systems,CIMS)是利用信息技术和 现代管理技术改造传统制造业、加强新兴制造业、提高企业市场竞争能力的一种生产模式。"
    },
    {
        "summary": "多媒体技术",
        "content": "多媒体技术是计算机技术和视频、音频及通信等技术相结合的产物。它是用来实现人和计 算机交互地对各种媒体(如文字、图形、影像、音频、视频、动画等)进行采集、传输、转换、编辑、存  储、管理，并由计算机综合处理为文字、图形、动画、音响、影像等视听信息而有机合成的新媒体。"
    },
    {
        "summary": "人工智能",
        "content": "人工智能是专门研究如何使计算机来模拟人的智能的技术。尽管经过了近半个世纪的努 力，被人们称为“电脑”的计算机与人脑相比，仍无法相提并论。"
    },
    {
        "summary": "模式识别",
        "content": "模式识别是指对某些感兴趣的客体进行定量的或结构的描述，研究一种自动生成技术，由计 算机自动地把待识别的模式分配到各自的模式类中。"
    },
    {
        "summary": "专家系统",
        "content": "专家系统是人工智能的另一重要应用领域。它是利用计算机构成存储量极大的知识库，把 各类专家丰富的知识和经验，以数据形式存储于知识库内，通过专用软件，根据用户输入查询的 要求，向用户做出所要求的解答。"
    },
    {
        "summary": "计算机系统的五大部件之间的互连方式",
        "content": "计算机系统的五大部件之间的互连方式有两种， 一种是各部件之间使用单独的连线，称为分 散连接；另一种是将各部件连到一组公共信息传输线上，称为总线连接。"
    },
    {
        "summary": "分散连接",
        "content": "一种是各部件之间使用单独的连线，称为分 散连接"
    },
    {
        "summary": "总线连接",
        "content": "另一种是将各部件连到一组公共信息传输线上，称为总线连接。"
    },
    {
        "summary": "总线的作用",
        "content": "总线是连接多个部件的信息传输线，是各部件共享的传输介质。"
    },
    {
        "summary": "总线的组成",
        "content": "总线实际上是由许多传输线或通路组成，每条线可一位一位地传输二进制代码， 一串二进制 代码可在一段时间内逐一传输完成。"
    },
    {
        "summary": "总线的分类方式",
        "content": "按数据传送方式可分为并行传输 总线和串行传输总线。在并行传输总线中，又可按传输数据宽度分为8位、16位、32位、64位等 传输总线。若按总线的使用范围划分，则又有计算机(包括外设)总线、测控总线、网络通信总线 等。"
    },
    {
        "summary": "片内总线",
        "content": "片内总线是指芯片内部的总线，如在CPU 芯片内部，寄存器与寄存器之间、寄存器与算逻单 元 ALU 之间都由片内总线连接。"
    },
    {
        "summary": "系统总线",
        "content": "系统总线是指CPU、主存、I/O 设备(通过I/0  接口)各大部件之间的信息传输线。由于这些 部件通常都安放在主板或各个插件板(插卡)上，故又称板级总线(在一块电路板上各芯片间的 连线)或板间总线。"
    },
    {
        "summary": "系统总线的分类",
        "content": "按系统总线传输信息的不同，又可分为三类：数据总线、地址总线和控制总线。"
    },
    {
        "summary": "数据总线",
        "content": "数据总线用来传输各功能部件之间的数据信息，它是双向传输总线，其位数与机器字长、存 储字长有关，一般为8位、16位或32位。"
    },
    {
        "summary": "总线宽度",
        "content": "数据总线的位数称为数据总线宽度，它是衡量系统性 能的一个重要参数。如果数据总线的宽度为8位，指令字长为16位，那么,CPU 在取指阶段必须 两次访问主存。"
    },
    {
        "summary": "地址总线",
        "content": "地址总线主要用来指出数据总线上的源数据或目的数据在主存单元的地址或I/O 设备的地  址。"
    },
    {
        "summary": "控制总线",
        "content": "由于数据总线、地址总线都是被挂在总线上的所有部件共享的，如何使各部件能在不同时刻 占有总线使用权，需依靠控制总线来完成，因此控制总线是用来发出各种控制信号的传输线。通 常对任一控制线而言，它的传输是单向的"
    },
    {
        "summary": "常见的控制信号",
        "content": "常见的控制信号如下：时钟、复位、总线请求、总线允许、中断请求、中断响应、存储器写、存储器读、I/0读、I/0写、传输响应"
    },
    {
        "summary": "时钟",
        "content": "时钟：用来同步各种操作。"
    },
    {
        "summary": "复位",
        "content": "复位：初始化所有部件。"
    },
    {
        "summary": "总线请求",
        "content": "总线请求：表示某部件需获得总线使用权。"
    },
    {
        "summary": "总线允许",
        "content": "总线允许：表示需要获得总线使用权的部件已获得了控制权。"
    },
    {
        "summary": "中断请求",
        "content": "中断请求：表示某部件提出中断请求。"
    },
    {
        "summary": "中断响应",
        "content": "中断响应：表示中断请求已被接收。"
    },
    {
        "summary": "存储器写",
        "content": "存储器写：将数据总线上的数据写至存储器的指定地址单元内。"
    },
    {
        "summary": "存储器读",
        "content": "存储器读：将指定存储单元中的数据读到数据总线上。"
    },
    {
        "summary": "I/0读",
        "content": "I/0读：从指定的I/O 端口将数据读到数据总线上。"
    },
    {
        "summary": "I/0写",
        "content": "I/0写：将数据总线上的数据输出到指定的I/0 端口内。"
    },
    {
        "summary": "传输响应",
        "content": "传输响应：表示数据已被接收，或已将数据送至数据总线上。"
    },
    {
        "summary": "通信总线的类别",
        "content": "因此通信总线的类别很多。但按传输方式可分为两种：串行通信和并行通信。"
    },
    {
        "summary": "串行通信",
        "content": "串行通信是指数据在单条1位宽的传输线上， 一位一位地按顺序分时传送。"
    },
    {
        "summary": "并行通信",
        "content": "并行通信是指数据在多条并行1位宽的传输线上，同时由源传送到目的地。如1字节的数 据，在并行传送中，要通过8条并行传输线同时由源传送到目的地。"
    },
    {
        "summary": "并行通信的特点",
        "content": "并行通信适宜于近距离的数据传输，通常小于30 m;串行通信适宜于远距离传送，可以从几 米达数千公里。"
    },
    {
        "summary": "总线特性的组成",
        "content": "总线特性包括以下几项。(1)机械特性(2)电气特性(3)功能特性(4)时间特性"
    },
    {
        "summary": "机械特性",
        "content": "机械特性是指总线在机械连接方式上的一些性能，如插头与插座使用的标准，它们的几何尺 寸、形状、引脚的个数以及排列的顺序，接头处的可靠接触等。"
    },
    {
        "summary": "电气特性",
        "content": "电气特性是指总线的每一根传输线上信号的传递方向和有效的电平范围。通常规定由  CPU 发出的信号称为输出信号，送入 CPU 的信号称为输入信号。"
    },
    {
        "summary": "功能特性",
        "content": "功能特性是指总线中每根传输线的功能，例如：地址总线用来指出地址码；数据总线用来传 递数据；"
    },
    {
        "summary": "时间特性",
        "content": "时间特性是指总线中的任一根线在什么时间内有效。每条总线上的各种信号互相存在一种 有效时序的关系，因此，时间特性一般可用信号时序图来描述。"
    },
    {
        "summary": "总线性能指标",
        "content": "总线性能指标如下。① 总线宽度② 总线带宽③ 时钟同步/异步④ 总线复用⑤ 信号线数⑥ 总线控制方式⑦ 其他指标"
    },
    {
        "summary": "总线宽度",
        "content": "总线宽度：通常是指数据总线的根数，用 bit(位)表示，如8位、16位、32位、64位(即8 根、16根、32根、64根)。"
    },
    {
        "summary": "总线带宽",
        "content": "总线带宽：总线带宽可理解为总线的数据传输速率，即单位时间内总线上传输数据的位 数，通常用每秒传输信息的字节数来衡量，单位可用 MBps(兆字节每秒)表示。"
    },
    {
        "summary": "时钟同步/异步",
        "content": "时钟同步/异步：总线上的数据与时钟同步工作的总线称为同步总线，与时钟不同步工作 的总线称为异步总线。"
    },
    {
        "summary": "总线复用",
        "content": "总线复用：一条信号线上分时传送两种信号。"
    },
    {
        "summary": "信号线数",
        "content": "信号线数：地址总线、数据总线和控制总线三种总线数的总和。"
    },
    {
        "summary": "总线控制方式",
        "content": "总线控制方式：包括突发工作、自动配置、仲裁方式、逻辑方式、计数方式等。"
    },
    {
        "summary": "驱动能力",
        "content": "总线的负载能力即驱动能力，是指当总线接上负载后，总线输入输出的逻辑电平是否能保持 在正常的额定范围内。"
    },
    {
        "summary": "总线标准",
        "content": "所谓总线标准，可视为系统与各模块、模块与模块之间的一个互连的标准界面。"
    },
    {
        "summary": "总线标准类型",
        "content": "目前流行的总线标准有以下几种。1.ISA总线 2.EISA总线 3.VESA(VL-BUS)   总线 4.PCI总线"
    },
    {
        "summary": "ISA总线",
        "content": "ISA(Industrial  Standard  Architecture)总线是 IBM 为了采用全16位的 CPU 而推出的，又称 AT总线，它使用独立于 CPU 的总线时钟，因此 CPU 可以采用比总线频率更高的时钟，有利于  CPU 性能的提高。"
    },
    {
        "summary": "EISA总线",
        "content": "EISA(Extended  Industrial  Standard  Architecture)是一种在 ISA 基础上扩充开放的总线标准， 与 ISA 可以完全兼容，从 CPU 中分离出了总线控制权，是一种具有智能化的总线，能支持多个总 线主控器和突发方式(总线上可进行成块的数据传送)的传输。"
    },
    {
        "summary": "VESA(VL-BUS) 总线",
        "content": "VESA总线是由VESA(Video Electronic Standard Association,视频电子标准协会)提出的局部 总线标准，又称为VL-BUS(Local  BUS)总线。"
    },
    {
        "summary": "PCI总线",
        "content": "PCI 总线是一种不依附于某个具体处理器的局部总线"
    },
    {
        "summary": "PCI总线的特点",
        "content": "PCI 总线是一种不依附于某个具体处理器的局部总线。它为系统提供了一个 高速的数据传输通道，与CPU 时钟频率无关，"
    },
    {
        "summary": "PCI总线的特点",
        "content": "良好的兼容性。PCI 总线部件和插件接口相对于处理器是独立的，它支持所有的目前和 将来不同结构的处理器，因此具有相对长的生命周期。"
    },
    {
        "summary": "PCI总线的特点",
        "content": "支持即插即用(Plug   and   Play),即任何扩展卡只要插入系统便可工作。 PCI 设备中配有 存放设备具体信息的寄存器，这些信息可供 BIOS(基本输入输出系统)和操作系统层的软件自动 配置 PCI 总线部件和插件，使系统使用方便，无须进行复杂的手动配置。"
    },
    {
        "summary": "PCI总线的特点",
        "content": "支持多主设备能力。主设备即对总线有控制权的设备，PCI 支持多主设备，即允许任何 主设备和从设备(对总线没有控制权的设备)之间实现点到点对等存取，体现了接纳设备的高度 灵活性。"
    },
    {
        "summary": "PCI总线的特点",
        "content": "具有与处理器和存储器子系统完全并行操作的能力。 PCI 总线可视为 CPU 与外设之间 的一个中间层，它通过 PCI 桥路(PCI 控制器)与CPU 相连。"
    },
    {
        "summary": "PCI总线的特点",
        "content": "可扩充性好。当PCI 总线驱动能力不足时，可以采用多层结构(参见图3.14)"
    },
    {
        "summary": "PCI总线的特点",
        "content": "软件兼容性好。 PCI 部件可以完全兼容现有的驱动程序和应用程序。设备驱动程序可 被移植到各类平台上。"
    },
    {
        "summary": "USB总线",
        "content": "USB总线基于通用连接技术，实现外设的简单快速连接，达到方便 用户、降低成本、扩展 PC 接连外设范围的目的。"
    },
    {
        "summary": "USB总线主要特点",
        "content": "还可以将 一 些 USB 外设进行串接，使一大串设备共用 PC 上的端口。它的主要特点是：① 具有真正的即插即用特征。用户可以在不关机的情况下很方便地对外设实行安装和拆 卸，主机可按外设的增删情况自动配置系统资源，外设装置驱动程序的安装、删除均自动实现。"
    },
    {
        "summary": "USB总线主要特点",
        "content": "具有很强的连接能力。使用 USB.HUB(USB   集线器)实现系统扩展，最多可链式连接127 个外设到同 一 系统。"
    },
    {
        "summary": "USB总线主要特点",
        "content": "数据传输率(USB 1.0版)有两种，即采用普通无屏蔽双绞线，速度可达1.5 Mbps,  若用带 屏蔽的双绞线，速度可达12 Mbps。USB 2.0版的数据传输率最高可达480 Mbps。"
    },
    {
        "summary": "USB总线主要特点",
        "content": "标准统 一 。USB 的引入减轻了对目前 PC 中所有标准接口的需求，如串口的鼠标、键盘， 并口的打印机、扫描仪，IDE 接口的硬盘，都可以改成以统一 的 USB 标准接入系统，从而减少了"
    },
    {
        "summary": "USB总线主要特点",
        "content": "连接电缆轻巧，电源体积缩小。USB 使用的4芯电缆2条用于信号连接，2条用于电源/ 地，可为外设提供+5V 的直流电源，方便用户"
    },
    {
        "summary": "USB总线主要特点",
        "content": "生命力强。USB 是一种开放性的不具有专利版权的工业标准，它是由一个标准化组织 “USB 实施者论坛”(该组织由150多家企业组成)制定出来的，因此不存在专利版权问题，USB 规范具有强大的生命力。"
    },
    {
        "summary": "总线结构分类",
        "content": "总线结构通常可分为单总线结构和多总线结构两种。"
    },
    {
        "summary": "单总线结构",
        "content": "图3.2是单总线结构的示意，它是将 CPU、主存、I/O 设 备 ( 通 过 /O 接口)都挂在一组总线 上，允许VO 设备之间、I/O 设备与 CPU 之间或I/O 设备与主存之间直接交换信息。这种结构简 单，也便于扩充，"
    },
    {
        "summary": "双总线结构的特点",
        "content": "双总线结构的特点是将速度较低的I/0  设备从单总线上分离出来，形成主存总线与 I/O  总 线分开的结构。"
    },
    {
        "summary": "总线设备分类",
        "content": "总线上所连接的各类设备，按其对总线有无控制功能可分为主设备(模块)和从设备(模块) 两种。"
    },
    {
        "summary": "主设备的功能",
        "content": "主设备对总线有控制权，从设备只能响应从主设备发来的总线命令，对总线没有控制权。 总线上信息的传送是由主设备启动的，"
    },
    {
        "summary": "总线判优控制分类",
        "content": "总线判优控制可分集中式和分布式两种，前者将控制逻辑集中在一处(如在 CPU  中),后者 将控制逻辑分散在与总线连接的各个部件或设备上。"
    },
    {
        "summary": "集中控制优先权仲裁方式分类",
        "content": "常见的集中控制优先权仲裁方式有以下三种。( 1 ) 链式查询( 2 ) 计数器定时查询(3)独立请求方式"
    },
    {
        "summary": "链式查询",
        "content": "在链式查询中，离总线控制部件最近的设备具 有最高的优先级。这种方式的特点是：只需很少几根线就能按 一 定优先次序实现总线控制，并且 很容易扩充设备，但对电路故障很敏感，且优先级别低的设备可能很难获得请求。"
    },
    {
        "summary": "计数器定时查询方式",
        "content": "计数器定时查询方式如图3.15(b)  所示。与图3.15(a)  相比，多了一组设备地址线，少了一 根总线同意线 BG。总线控制部件接到由 BR 送来的总线请求信号后，在总线未被使用(BS=0)的情况下，总线控制部件中的计数器开始计数，"
    },
    {
        "summary": "独立请求方式",
        "content": "独立请求方式如图3.15(c) 所示。由图中可见，每一台设备均有一对总线请求线 BR, 和总 线同意线 BG,。当设备要求使用总线时，便发出该设备的请求信号。"
    },
    {
        "summary": "独立请求方式特点",
        "content": "这种方式的特点是：响应速度快，优先次序 控制灵活(通过程序改变),但控制线数量多，总线控制更复杂。链式查询中仅用两根线确定总 线使用权属于哪个设备，在计数器查询中大致用log₂n 根线，其中n 是允许接纳的最大设备数，而 独立请求方式需采用2n 根线。"
    },
    {
        "summary": "总线周期",
        "content": "通常将完成一次总线操作的时间称为总线周期，可分为以下4个阶段。"
    },
    {
        "summary": "总线周期的四个阶段",
        "content": "通常将完成一次总线操作的时间称为总线周期，可分为以下4个阶段：申请分配阶段、寻址阶段、传数阶段、结束阶段"
    },
    {
        "summary": "申请分配阶段",
        "content": "申请分配阶段：由需要使用总线的主模块(或主设备)提出申请，经总线仲裁机构决定下 一传输周期的总线使用权授于某一申请者。"
    },
    {
        "summary": "寻址阶段",
        "content": "寻址阶段：取得了使用权的主模块通过总线发出本次要访问的从模块(或从设备)的地址 及有关命令，启动参与本次传输的从模块。"
    },
    {
        "summary": "传数阶段",
        "content": "传数阶段：主模块和从模块进行数据交换，数据由源模块发出，经数据总线流人目的 模块。"
    },
    {
        "summary": "结束阶段",
        "content": "结束阶段：主模块的有关信息均从系统总线上撤除，让出总线使用权。"
    },
    {
        "summary": "总线通信控制分类",
        "content": "总线通信控制主要解决通信双方如何获知传输开始和传输结束，以及通信双方如何协调如 何配合。通常用四种方式：同步通信、异步通信、半同步通信和分离式通信。"
    },
    {
        "summary": "同步通信",
        "content": "通信双方由统一时标控制数据传送称为同步通信。"
    },
    {
        "summary": "同步通信的优点和缺点",
        "content": "同步通信的优点是规定明确、统一，模块间的配合简单一致。其缺点是主、从模块时间配合 属于强制性“同步”,必须在限定时间内完成规定的要求。并且对所有从模块都用同一限时，这 就势必造成，对各不相同速度的部件而言，必须按最慢速度的部件来设计公共时钟，严重影响总 线的工作效率，也给设计带来了局限性，缺乏灵活性。"
    },
    {
        "summary": "异步通信",
        "content": "异步通信克服了同步通信的缺点，允许各模块速度的不一致性，给设计者充分的灵活性和选 择余地。它没有公共的时钟标准，不要求所有部件严格的统一操作时间，而是采用应答方式(又 称握手方式),即当主模块发出请求(Request) 信号时， 一直等待从模块反馈回来“响应”(Ac-  knowledge)信号后，才开始通信。"
    },
    {
        "summary": "异步通信的应答方式",
        "content": "异步通信的应答方式又可分为不互锁、半互锁和全互锁三种类型"
    },
    {
        "summary": "不互锁方式",
        "content": "主模块发出请求信号后，不必等待接到从模块的回答信号，而是经过一段时间，确认从模块 已收到请求信号后，便撤销其请求信号；从模块接到请求信号后，在条件允许时发出回答信号，并 且经过一段时间(这段时间的设置对不同设备而言是不同的)确认主模块已收到回答信号后，自 动撤销回答信号。"
    },
    {
        "summary": "不互锁方式举例",
        "content": "例如，CPU 向主存写信息，CPU 要先后给出地 址信号、写命令以及写人数据，即采用此种方式。"
    },
    {
        "summary": "半互锁方式",
        "content": "主模块发出请求信号，必须待接到从模块的回答信号后再撤销其请求信号，有互锁关系；而 从模块在接到请求信号后发出回答信号，但不必等待获知主模块的请求信号已经撤销，而是隔一 段时间后自动撤销其回答信号，无互锁关系。由于一方存在互锁关系， 一方不存在互锁关系，故 称半互锁方式。"
    },
    {
        "summary": "半互锁方式举例",
        "content": "例如，在多机系统中，某个 CPU 需访问共享存储器(供所有 CPU 访问的存储器) 时，该 CPU 发出访存命令后，必须收到存储器未被占用的回答信号，才能真正进行访存操作。"
    },
    {
        "summary": "全互锁方式",
        "content": "主模块发出请求信号，必须待从模块回答后再撤销其请求信号；从模块发出回答信号，必须 待获知主模块请求信号已撤销后，再撤销其回答信号。双方存在互锁关系，故称为全互锁方式。"
    },
    {
        "summary": "全互锁方式举例",
        "content": "例如，在网络通信中，通信双方采用的就是全互锁方式。"
    },
    {
        "summary": "异步串行通信特点",
        "content": "异步串行通信时，没有同步时钟，也不需要在数据传送中传送同步信 号。"
    },
    {
        "summary": "异步串行通信特点",
        "content": "异步串行通信的数据传送速率用波特率来衡量。波特率是指单位时间内传送二进制数据的 位数，单位用bps(位/秒)表示，记作波特。"
    },
    {
        "summary": "半同步通信",
        "content": "半同步通信既保留了同步通信的基本特点，如所有的地址、命令、数据信号的发出时间，都严 格参照系统时钟的某个前沿开始，而接收方都采用系统时钟后沿时刻来进行判断识别；同时又像  异步通信那样，允许不同速度的模块和谐地工作。"
    },
    {
        "summary": "存储器的功能",
        "content": "存储器是计算机系统中的记忆设备，用来存放程序和数据"
    },
    {
        "summary": "存储器分类",
        "content": "当今，存储器的种类繁多，从不同的角度对存储器可作不同的分类。1. 按存储介质分类 2. 按存取方式分类 3. 按在计算机中的作用分类"
    },
    {
        "summary": "存储介质",
        "content": "存储介质是指能寄存“0”、“1”两种代码并能区别两种状态的物质或元器件。"
    },
    {
        "summary": "存储介质举例",
        "content": "存储介质主要 有半导体器件、磁性材料和光盘等。"
    },
    {
        "summary": "按存储介质分类",
        "content": "按存储介质分类：(1)半导体存储器(2)磁表面存储器(3)磁芯存储器(4)光盘存储器"
    },
    {
        "summary": "半导体存储器",
        "content": "存储元件由半导体器件组成的存储器称为半导体存储器。"
    },
    {
        "summary": "半导体存储器优点和缺点",
        "content": "现代半导体存储器都用超大规模 集成电路工艺制成芯片，其优点是体积小、功耗低、存取时间短。其缺点是当电源消失时，所存信 息也随即丢失，它是一种易失性存储器。近年来已研制出用非挥发性材料制成的半导体存储器， 克服了信息易失的弊病。"
    },
    {
        "summary": "半导体存储器分类",
        "content": "半导体存储器又可按其材料的不同，分为双极型(TTIL)半导体存储器和 MOS 半导体存储器 两种。"
    },
    {
        "summary": "磁表面存储器",
        "content": "磁表面存储器是在金属或塑料基体的表面上涂一层磁性材料作为记录介质，工作时磁层随 载磁体高速运转，用磁头在磁层上进行读/写操作，故称为磁表面存储器。"
    },
    {
        "summary": "磁表面存储器分类",
        "content": "按载磁体形状的不同， 可分为磁盘、磁带和磁鼓。"
    },
    {
        "summary": "磁芯",
        "content": "磁芯是由硬磁材料做成的环状元件，在磁芯中穿有驱动线(通电流)和读出线，这样便可进 行读/写操作。"
    },
    {
        "summary": "光盘存储器",
        "content": "光盘存储器是应用激光在记录介质(磁光材料)上进行读/写的存储器，具有非易失性的特 点。"
    },
    {
        "summary": "按存取方式分类",
        "content": "按存取方式可把存储器分为随机存储器、只读存储器、顺序存取存储器和直接存取存储器。"
    },
    {
        "summary": "随机存储器",
        "content": "RAM是一种可读/写存储器，其特点是存储器的任何一个存储单元的内容都可以随机存取， 而且存取时间与存储单元的物理位置无关。"
    },
    {
        "summary": "随机存储器分类",
        "content": "由于存储信息原理的不同，RAM又分为静态 RAM (以触发器原理寄存信息)和动态 RAM (以电容充 放电原理寄存信息)。"
    },
    {
        "summary": "只读存储器",
        "content": "只读存储器是能对其存储的内容读出，而不能对其重新写入的存储器。这种存储器一旦存  入了原始信息后，在程序执行过程中，只能将内部信息读出，而不能随意重新写入新的信息去改  变原始信息。"
    },
    {
        "summary": "掩模型只读存储器",
        "content": "早期只读存储器的存储内容根据用户要求，厂家采用掩模工艺，把原始信息记录在芯片中， 一旦制成后无法更改，称为掩模型只读存储器(Masked ROM,MROM)。"
    },
    {
        "summary": "只读存储器类型",
        "content": "随着半导体技术的发展和用户需求的变化，只读存储器先后派生出可编程只读存储器(Programmable ROM,PROM)、可擦除可编程只读存储器(Erasable  Programmable  ROM,EPROM)以及用电可擦除可编程只读存储器(Electrically   Erasable   Programmable   ROM,EEPROM)。"
    },
    {
        "summary": "串行访问存储器",
        "content": "如果对存储单元进行读/写操作时，需按其物理位置的先后顺序寻找地址，则这种存储器称 为串行访问存储器。"
    },
    {
        "summary": "按在计算机中的作用分类",
        "content": "按在计算机系统中的作用不同，存储器主要分为主存储器、辅助存储器、缓冲存储器。"
    },
    {
        "summary": "主存储器的主要特点",
        "content": "主存储器(简称主存)的主要特点是它可以和 CPU 直接交换信息。"
    },
    {
        "summary": "辅助存储器的主要特点",
        "content": "辅助存储器(简称辅存) 是主存储器的后援存储器，用来存放当前暂时不用的程序和数据，它不能与 CPU 直接交换信息。"
    },
    {
        "summary": "主存和辅存的区别",
        "content": "主存速度快、容量小、每位价格高；辅存速度慢、容量大、每位价格低。"
    },
    {
        "summary": "存储器性能指标",
        "content": "存储器有3个主要性能指标：速度、容量和每位价格(简称位价)。"
    },
    {
        "summary": "Cache的作用",
        "content": "存用来存放将要参与运行的 程序和数据，其速度与 CPU 速度差距较大，为了使它们之间速度更好地匹配，在主存与 CPU之间插人了一种比主存速度更快、容量更小的高速缓  冲存储器 Cache, 显然其位价要高于主存。"
    },
    {
        "summary": "存储器速度、容量和位价的关系",
        "content": "一般来说，速度越高， 位价就越高；容量越大，位价就越低，而且容量越大，速度必越低。人们追求大容量、高速度、 低位价的存储器，可惜这是很难达到的。"
    },
    {
        "summary": "存储系统层次结构",
        "content": "实际上，存储系统层次结构主要体现在缓存-主存和主存-辅存这两个存储层次上，如图 4.3所示。显然，CPU 和缓存、主存都能直接交换信息；缓存能直接和 CPU、主存交换信息；主存 可以和 CPU、缓存、辅存交换信息。"
    },
    {
        "summary": "缓存-主存层次作用",
        "content": "缓存-主存层次主要解决CPU 和主存速度不匹配的问题。由于缓存的速度比主存的速度 高，只要将 CPU 近期要用的信息调入缓存，CPU 便可以直接从缓存中获取信息，从而提高访存速 度。但由于缓存的容量小，因此需不断地将主存的内容调入缓存，使缓存中原来的信息被替换 掉。主存和缓存之间的数据调动是由硬件自动完成的，对程序员是透明的。"
    },
    {
        "summary": "主存-辅存层次作用",
        "content": "主存-辅存层次主要解决存储系统的容量问题。辅存的速度比主存的速度低，而且不能和 CPU 直接交换信息，但它的容量比主存大得多，可以存放大量暂时未用到的信息。当 CPU 需 要 用到这些信息时，再将辅存的内容调入主存，供 CPU 直接访问。主存和辅存之间的数据调动是 由硬件和操作系统共同完成的。"
    },
    {
        "summary": "物理地址",
        "content": "物理地址是程序在执行过程中能够真正访问的地址， 也是实实在在的主存地址"
    },
    {
        "summary": "集中刷新",
        "content": "集中刷新是在规定的一个刷新周期内，对全部存储单元集中一段时间逐行进行刷新，此刻必 须停止读/写操作。"
    },
    {
        "summary": "死时间",
        "content": "如图4.24所示。由于在这64 μs 时间 内不能进行读/写操作，故称为“死时间”"
    },
    {
        "summary": "分散刷新",
        "content": "分散刷新是指对每行存储单元的刷新分散到每个存取周期内完成。"
    },
    {
        "summary": "异步刷新",
        "content": "异步刷新是前两种方式的结合，它既可缩短“死时间”,又充分利用最大刷新间隔为.2 ms 的 特点。"
    },
    {
        "summary": "动态RAM与静态RAM的比较",
        "content": "目前，动态 RAM的应用比静态 RAM要广泛得多。其原因如下：① 在同样大小的芯片中，动态 RAM的集成度远高于静态 RAM, 如动态RAM的基本单元电路为一个 MOS 管，静态 RAM 的基本单元电路可为4~6个 MOS 管。动态 RAM  行、列地址按先后顺序输送，减少了芯片引脚，封装尺寸也减少。"
    },
    {
        "summary": "动态RAM的缺点",
        "content": "动态RAM也有缺点：①由于使用动态元件(电容),因此它的速度比静态 RAM 低。②动态 RAM 需要再生，故需配置再生电路，也需要消耗一部分功率。通常，容量不大的高 速缓冲存储器大多用静态 RAM 实现"
    },
    {
        "summary": "半导体ROM基本器件",
        "content": "对半导体ROM 而言，基本器件为两种：MOS 型和 TTL 型。"
    },
    {
        "summary": "掩模ROM",
        "content": "图4.27所示为 MOS 型掩模 ROM, 其容量为1K×1 位，采用重合法驱动，行、列地址线分别经 行、列译码器，各有32根行、列选择线。"
    },
    {
        "summary": "PROM",
        "content": "PROM 是可以实现一次性编程的只读存储器，图4.28示意一个由双极型电路和熔丝构成的基本单元电路。"
    },
    {
        "summary": "EPROM",
        "content": "EPROM是一种可擦除可编程只读存器。"
    },
    {
        "summary": "EPROM的改写方法",
        "content": "EPROM的改写可用两种方法； 一种用紫外线照射，但擦除时间比较长，而且不能对个别需改写的单元进行单独擦除或重写。另一种方法用电气方法将存储内容擦除，再重写。"
    },
    {
        "summary": "快擦型存储器",
        "content": "进入到20世纪.80年代，又出现了一种闪速存储器(Flash  Memory),又称快擦型存储器，它 是在EPROM 和EEPROM 工艺基础上产生的一种新型的、具有性能价格比更好、可靠性更高的可 擦写非易失性存储器。"
    },
    {
        "summary": "存储容量的扩展",
        "content": "必须将若干存储芯片连 在一起才能组成足够容量的存储器，称为存储容量的扩展"
    },
    {
        "summary": "存储容量的扩展的方式",
        "content": "必须将若干存储芯片连 在一起才能组成足够容量的存储器，称为存储容量的扩展，通常有位扩展和字扩展。"
    },
    {
        "summary": "位扩展",
        "content": "位扩展是指增加存储字长"
    },
    {
        "summary": "字扩展",
        "content": "字扩展是指增加存储器字的数量"
    },
    {
        "summary": "字、位扩展",
        "content": "字、位扩展是指既增加存储字的数量，又增加存储字长。"
    },
    {
        "summary": "地址线的连接",
        "content": "通常总是将 CPU 地址线的低位与存储芯片的地址线相连。 CPU 地址线的高位或在存储芯片扩 充时用，或做其他用途，如片选信号等。"
    },
    {
        "summary": "数据线的连接",
        "content": "同样，CPU 的数据线数与存储芯片的数据线数也不一定相等。此时，必须对存储芯片扩位， 使其数据位数与 CPU 的数据线数相等。"
    },
    {
        "summary": "读/写命令线的连接",
        "content": "CPU 读/写命令线一般可直接与存储芯片的读/写控制端相连，通常高电平为读，低电平为 写。"
    },
    {
        "summary": "片选线的连接",
        "content": "片选线的连接是 CPU 与存储芯片正确工作的关键。存储器由许多存储芯片组成，哪一片 被选中完全取决于该存储芯片的片选控制端 CS 是否能接收到来自CPU 的片选有效信号。"
    },
    {
        "summary": "合理选择存储芯片",
        "content": "合理选择存储芯片主要是指存储芯片类型(RAM 或 ROM) 和数量的选择。通常选用ROM 存放系统程序、标准子程序和各类常数等。 RAM 则是为用户编程而设置的。此外，在考虑芯片 数量时，要尽量使连线简单方便。"
    },
    {
        "summary": "汉明码的组成",
        "content": "汉明码是由 Richard Hanming于1950年提出的，它具有一位纠错能力。"
    },
    {
        "summary": "编码最小距离",
        "content": "所谓编码最小距离，是指在一种编码系统中，任意两组合法代码之间的最少二进制位数的差异。"
    },
    {
        "summary": "汉明码的纠错过程",
        "content": "汉明码的纠错过程实际上是对传送后的汉明码形成新的检测位P(i=1,2,4,8,…), 根据P  的状态，便可直接指出错误的位置。"
    },
    {
        "summary": "单体四字结构存储器",
        "content": "图中示意了一个单体四字结构的存储器，每字 W 位。按地址在一个存取周期内可读出4×W  位的指令或数据，使主存带宽提高到4倍。"
    },
    {
        "summary": "多体并行系统",
        "content": "多体并行系统就是采用多体模块组成的存储器。每个模块有相同的容量和存取速度，各模 块各自都有独立的地址寄存器(MAR) 、数据寄存器(MDR) 、地址译码、驱动电路和读/写电路， 它们能并行工作，又能交叉工作。"
    },
    {
        "summary": "模M编址",
        "content": "图4.43是按低位交叉编址的多体模块结构示意图。由于程序连续存放在相邻体中，故又有 交叉存储之称。显然低位地址用来表示体号，高位地址为体内地址。这种编址方法又称为模 M  编址(M等于模块数),表4.3列出了模4交叉编址的地址号"
    },
    {
        "summary": "高位交叉编址的多体存储器结构",
        "content": "图4.42是适合于并行工作的高位交叉编址的多体存储器结构示意图，图中程序因按体内地址顺序存放(一个体存满后，再存入下一个体),故又有顺序存储之 称。显然，高位地址可表示体号，低位地址为体内地址。按这种编址方式，只要合理调动，使不同的请求源同时访问不同的体，便可实现并行工作。"
    },
    {
        "summary": "低位交叉编址的多体模块结构",
        "content": "图4.43是按低位交叉编址的多体模块结构示意图。由于程序连续存放在相邻体中，故又有 交叉存储之称。显然低位地址用来表示体号，高位地址为体内地址。这种编址方法又称为模 M  编址(M等于模块数),表4.3列出了模4交叉编址的地址号"
    },
    {
        "summary": "存控",
        "content": "因此，在某一时刻，决定主存究竟与哪个部件交换信息必须由存储器控制部件(简称存控) 来承担。"
    },
    {
        "summary": "存控基本结构",
        "content": "4.46是一个存控基本结构框图，它由排队器、控制线路、节拍发生器及标记触发器等组成。"
    },
    {
        "summary": "排队器",
        "content": "为了防止发生两个以 上的请求源同时占用同一存储体，并防止将代码 错送到另一个请求源等各种错误的发生，在存控 内需设置一个排队器"
    },
    {
        "summary": "存控标记触发器 C",
        "content": "存控标记触发器 C：它用来接受排队器的输出信号，一旦响应某请求源的请求，C。被置“1”,以便启动节拍发生器工作。"
    },
    {
        "summary": "节拍发生器",
        "content": "节拍发生器：它用来产生固定节拍，与机器主脉冲同步，使控制线路按一定时序发出信号。"
    },
    {
        "summary": "控制线路",
        "content": "控制线路：由它将排队器给出的信号与节拍发生器提供的节拍信号配合，向存储器各部件发出各种控 制信号，用以实现对总线控制及完成存储器读/写操作，并向请求源发出回答信号，表示存储器已 响应了请求等。"
    },
    {
        "summary": "SDRAM的特点",
        "content": "SDRAM 与常用的异步 DRAM 不同，它与处理器的数据交换同步于系统的时钟信号，并且以 处理器-存储器总线的最高速度运行，而不需要插入等待状态。"
    },
    {
        "summary": "SDRAM的特点",
        "content": "SDRAM 还支持猝发访问模式，即CPU 发出一个地址就可以连续访问一个数据块(通常为32 字节)。"
    },
    {
        "summary": "RDRAM",
        "content": "由 Rambus开发的RDRAM采用专门的DRAM和高性能的芯片接口取代现有的存储器接口"
    },
    {
        "summary": "带Cache的DRAM",
        "content": "带Cache的DRAM是在通常的DRAM芯片内又集成了一个小的 SRAM, 又称增强型的 DRAM(EDRAM) 。"
    },
    {
        "summary": "局部性原理",
        "content": "由局部性原理指出，在已被访问字的附近，近期也可能被 访问，因此，增大块长，可将更多有用字存入缓存，提高其命中率。可是，倘若继续增大块长，命中 率很可能下降，这是因为所装入缓存的有用数据反而少于被替换掉的有用数据。"
    },
    {
        "summary": "Cache的基本结构",
        "content": "Cache的基本结构原理框图如图所示。它主要由Cache存储体、地址映射变换机构、Cache 替换机构几大模块组成。"
    },
    {
        "summary": "Cache存储体",
        "content": "Cache存储体以块为单位与主存交换信息，为加速 Cache与主存之间的调动，主存大多采用 多体结构，且 Cache 访存的优先级最高"
    },
    {
        "summary": "地址映射变换机构",
        "content": "地址映射变换机构是将CPU 送来的主存地址转换为Cache 地址。"
    },
    {
        "summary": "地址映射",
        "content": "而地址变换又与主存地址以什么样的函数关 系映射到Cache 中(称为地址映射)有关"
    },
    {
        "summary": "替换机构",
        "content": "当 Cache 内容已满，无法接受来自主存块的信息时，就由Cache 内的替换机构按一定的替换 算法来确定应从 Cache 内移出哪个块返回主存，而把新的主存块调入Cache。"
    },
    {
        "summary": "Cache的读操作",
        "content": "读操作的过程可用流程图4.51来描述。当CPU 发出主存地址后，首先判断该存储字是否 在 Cache 中。若命中，直接访问Cache,将该字送至CPU; 若未命中，一方面要访问主存，将该字传 送给 CPU, 与此同时，要将该字所在的主存块装入 Cache,如果此时Cache 已装满，就要执行替换 算法，腾出空位才能将新的主存块调入。"
    },
    {
        "summary": "Cache的写操作",
        "content": "写操作比较复杂，因为对 Cache 块内写人的信息，必须与被映射的主存块内的信息完全一 致。"
    },
    {
        "summary": "写直达法",
        "content": "写直达法(Write-through),    又称为存直达法(Store-through),    即写操作时数据既写入 Cache 又写入主存。它能随时保证主存和 Cache的数据始终一致，但增加了访存次数。"
    },
    {
        "summary": "写回法",
        "content": "写回法(Write-back),又称为拷回法(Copy-back), 即写操作时只把数据写入 Cache 而不 写入主存，但当 Cache 数据被替换出去时才写回主存。"
    },
    {
        "summary": "多个Cache",
        "content": "Cache 刚出现时，典型系统只有一个缓存，近年来普遍采用多个 Cache 。其含义有两方面：一 是增加 Cache 的级数；二是将统一的 Cache 变成分立的Cache。"
    },
    {
        "summary": "单一缓存",
        "content": "所谓单一缓存，是指在CPU 和主存之间只设一个缓存。"
    },
    {
        "summary": "片内缓存",
        "content": "随着集成电路逻辑密度的提高，又 把这个缓存直接与CPU 制作在同一个芯片内，故又称为片内缓存(片载缓存)"
    },
    {
        "summary": "片内缓存的优点",
        "content": "片内缓存可以提高外部总线的利用率，因为将 Cache 制作在芯片内，CPU 直接访问Cache 不必占用芯片外的总线 (系统总线)"
    },
    {
        "summary": "两级缓存",
        "content": "这种由片外缓存和片内缓存组成的 Cache 称 为两级缓存，并称片内缓存为第一级，片外缓存为第二级。"
    },
    {
        "summary": "统一缓存",
        "content": "统一缓存是指指令和数据都存放在同一缓存内的 Cache"
    },
    {
        "summary": "分立缓存",
        "content": "分立缓存是指指令和数据分别存 放在两个缓存中，一个称为指令 Cache, 一个称为数据 Cache 。"
    },
    {
        "summary": "超前控制",
        "content": "所谓超前控制，是指在当前指令执行过程尚未结束时就提前将下一条准备执行的指令取 出，称为超前取指或指令预取。"
    },
    {
        "summary": "流水线控制",
        "content": "所谓流水线控制实质上是多条指令同时执行(详见第8章), 又可视为指令流水"
    },
    {
        "summary": "地址映射",
        "content": "由主存地址映射到 Cache 地址称为地址映射"
    },
    {
        "summary": "地址映射方式",
        "content": "地址映射方式很多，有直接映射(固定的映射 关系)、全相联映射(灵活性大的映射关系)、组相联映射(上述两种映射的折中)。"
    },
    {
        "summary": "直接映射",
        "content": "直接映射方式主存与缓存中字块的对应关系：图中每个主存块只与一个缓存块相对应，映射关系式为i=j  mod  C       或   i=jmod 2C其中，为缓存块号，j 为主存块号，C 为缓存块数。"
    },
    {
        "summary": "直接映射的优点",
        "content": "这种方式的优点是实现简单，只需利用主存地址的某些位直接判断，即可确定所需字块是否在 缓 存 中 。"
    },
    {
        "summary": "直接映射方式的缺点",
        "content": "直接映射方式的缺点是不够灵活，因每个主存块只能固定地对应某个缓存块，即使缓存内还 空着许多位置也不能占用，使缓存的存储空间得不到充分的利用。"
    },
    {
        "summary": "全相联映射",
        "content": "全相联映射允许主存中每一字块映射到 Cache 中的任何一块位置上"
    },
    {
        "summary": "组相联映射",
        "content": "组相联映射是对直接映射和全相联映射的一种折中。它把 Cache 分为 Q 组，每组有 R 块， 并有以下关系：i=jmod    Q 其中，i 为缓存的组号，j 为主存的块号。"
    },
    {
        "summary": "替换算法",
        "content": "而在组相联和全相联映射的 Cache 中，主存块可以写人 Cache 中若干位置，这就有一个选择替换掉哪一个 Cache 字块的问题，即所谓替换算法问题。"
    },
    {
        "summary": "替换算法类型",
        "content": "常用的替换算法有先进先出算法、近期最少使用算法和随机法。"
    },
    {
        "summary": "先进先出算法FIFO",
        "content": "FIFO算法选择最早调入 Cache 的字块进行替换，它不需要记录各字块的使用情况，比较容 易实现，开销小，但没有根据访存的局部性原理，故不能提高 Cache 的命中率。因为最早调人的 信息可能以后还要用到，或者经常要用到，如循环程序。"
    },
    {
        "summary": "近期最少使用算法",
        "content": "LRU算法比较好地利用访存局部性原理，替换出近期用得最少的字块。它需要随时记录 Cache 中各字块的使用情况，以便确定哪个字块是近期最少使用的字块。"
    },
    {
        "summary": "随机法",
        "content": "随机法是随机地确定被替换的块，比较简单，可采用一个随机数产生器产生一个随机的被替 换的块，但它也没有根据访存的局部性原理，故不能提高 Cache 的命中率。"
    },
    {
        "summary": "辅助存储器的特点",
        "content": "辅助存储器作为主存的后援设备又称为外部存储器，简称外存，它与主存一起组成了存储器 系统的主存-辅存层次。与主存相比，辅存具有容量大、速度慢、价格低、可脱机保存信息等特 点，属“非易失性”存储器。"
    },
    {
        "summary": "磁表面存储器",
        "content": "磁表面存储器是在不同形状(如盘状、带状等)的载体上涂有磁性材料层，工作时，靠载磁 体高速运动，由磁头在磁层上进行读/写操作，信息被记录在磁层上，这些信息的轨迹就是磁 道。"
    },
    {
        "summary": "磁表面存储器的主要技术指标",
        "content": "磁表面存储器的主要技术指标：(1)记录密度 (2)存储容量 (3)平均寻址时间"
    },
    {
        "summary": "记录密度",
        "content": "记录密度通常是指单位长度内所存储的二进制信息量。"
    },
    {
        "summary": "存储容量",
        "content": "存储容量是指外存所能存储的二进制信息总数量，一般以位或字节为单位。"
    },
    {
        "summary": "平均寻址时间",
        "content": "由于从最外圈磁道找到最里圈磁道和寻找相邻磁道所需时间是不等的，而且磁 头等待不同区段所花的时间也不等，因此，取其平均值，称为平均寻址时间 T,  它是平均找道时 间t."
    },
    {
        "summary": "数据传输率",
        "content": "数据传输率D, 是指单位时间内磁表面存储器向主机传送数据的位数或字节数，它与记录密 度 D"
    },
    {
        "summary": "误码率",
        "content": "误码率是衡量磁表面存储器出错概率的参数，它等于从辅存读出时，出错信息位数和读出信 息的总位数之比。"
    },
    {
        "summary": "磁记录原理",
        "content": "磁表面存储器通过磁头和记录介质的相对运动完成读/写操作。"
    },
    {
        "summary": "磁记录方式",
        "content": "磁记录方式又称为编码方式，它是按某种规律将一 串二进制数字信息变换成磁表面相应的磁化状态。"
    },
    {
        "summary": "磁记录方式种类",
        "content": "磁记录方式对记录密度和可靠性都有很大影响，常用的记录方式有六种。(1)归零制(2)不归零制(3)“见1就翻”的不归零制(4)调相制(PM)(5)调频制(FM)(6)改进型调频制(MFM)"
    },
    {
        "summary": "归零制(RZ)",
        "content": "归零制记录“1”时，通以正向脉冲电流，记录“0”时，通以反向脉冲电流。这样使其在磁表 面形成两个不同极性的磁饱和状态，分别表示“1”和“0”。"
    },
    {
        "summary": "不归零制(NRZ)",
        "content": "不归零制记录信息时，磁头线圈始终有驱动电流，不是正向，便是反向，不存在无电流状 态。这样，磁表面层不是正向被磁化，就是反向被磁化。当连续记录“1”或“0”时，其写电流 方向不变，只有当相邻两信息代码不同时，写电流才改变方向，故称为“见变就翻”的不归 零制。"
    },
    {
        "summary": "“见1就翻”的不归零制",
        "content": "“见1就翻”的不归零制在记录信息时，磁头线圈也始终有电流。"
    },
    {
        "summary": "调相制",
        "content": "调相制又称为相位编码(PE),   其记录规则是：记录“1”时，写电流由负变正；记录“0”时，写 电流由正变负，而且电流变化出现在一位信息记录时间的中间时刻，它以相位差为180°的磁化 翻转方向来表示“1”和“0”。"
    },
    {
        "summary": "调频制",
        "content": "调频制的记录规则是：以驱动电流变化的频率不同来区别记录“1”还是“0”。当记录“0”时， 在一位信息的记录时间内电流保持不变；当记录“1”时，在一位信息记录时间的中间时刻，使电 流改变一次方向。"
    },
    {
        "summary": "改进型调频制",
        "content": "这种记录方式基本上同调频制，即记录“0”时，在位记录时间内电流不变；记录“1”时，在位 记录时间的中间时刻电流发生一次变化。"
    },
    {
        "summary": "评价记录方式的主要指标",
        "content": "评价一种记录方式的优劣标准主要反映在编码效率和自同步能力等方面。"
    },
    {
        "summary": "编码效率",
        "content": "编码效率是指位密度与磁化翻转密度的比值，可用记录一位信息的最大磁化翻转次数来表 示。"
    },
    {
        "summary": "自同步能力",
        "content": "自同步能力是指从单个磁道读出的脉冲序列中所提取同步时钟脉冲的难易程度。"
    },
    {
        "summary": "硬磁盘存储器类型",
        "content": "硬磁盘存储器的盘片是由硬质铝合金材料制成的，其表面涂有一层可被磁化的硬磁特性材 料。按磁头的工作方式可分为固定磁头磁盘存储器和移动磁头磁盘存储器；按磁盘是否具有可 换性又可分为可换盘磁盘存储器和固定盘磁盘存储器。"
    },
    {
        "summary": "固定磁头的磁盘存储器",
        "content": "固定磁头的磁盘存储器，其磁头位置固定不动，磁盘上的每一个磁道都对应一个磁头，如图 4.65(a) 所示，盘片也不可更换。其特点是省去了磁头沿盘片径向运动所需寻找磁道的时间，存 取速度快，只要磁头进人工作状态即可进行读写操作。"
    },
    {
        "summary": "移动磁头的磁盘存储器",
        "content": "移动磁头的磁盘存储器在存取数据时，磁头在盘面上作径向运动，这类存储器可以由一个盘  片组成，如图4.65(b) 所示。也可由多个盘片装在一个同心主轴上，每个记录面各有一个磁头， 如图4.65(c) 所示。"
    },
    {
        "summary": "可换盘磁盘存储器",
        "content": "可换盘磁盘存储器是指盘片可以脱机保存。这种磁盘可以在互为兼容的磁盘存储器之间交 换数据，便于扩大存储容量。"
    },
    {
        "summary": "固定盘磁盘存储器",
        "content": "固定盘磁盘存储器是指磁盘不能从驱动器中取下，更换时要把整个头盘组合体一起更换。"
    },
    {
        "summary": "温切斯特磁盘",
        "content": "温切斯特磁盘是一种可移动磁头固定盘片的磁盘存储器，简称温盘。"
    },
    {
        "summary": "硬磁盘存储器的结构",
        "content": "硬磁盘存储器由磁盘驱动器、磁盘控制器和盘片3大部分组成"
    },
    {
        "summary": "磁盘驱动器",
        "content": "磁盘驱动器是主机外的一个独立装置，又称磁盘机。"
    },
    {
        "summary": "磁盘控制器",
        "content": "磁盘控制器通常制作成 一 块电路板，插在主机总线插槽中。"
    },
    {
        "summary": "磁盘控制器的作用",
        "content": "磁盘控制器通常制作成 一 块电路板，插在主机总线插槽中。其作用是接收由主机发来的命 令，将它转换成磁盘驱动器的控制命令，实现主机和驱动器之间的数据格式转换和数据传送，并 控制驱动器的读/写。"
    },
    {
        "summary": "半导体盘",
        "content": "半导体盘是用半导体材料制成的“盘”,它既没有盘，也没有其他运动部件，它是以半导体芯 片为核心，加上接口电路和其他控制电路，在功能上模拟硬盘，即按硬盘的工作方式存取数据。"
    },
    {
        "summary": "Flash Memory 简述",
        "content": "Flash Memory 是在EPROM 和EEPROM 基础上产生的一种新型的、具有性能价格比和可靠性 更高的可擦写、非易失性的存储器。大容量的 Flash Memory 既能长期反复使用，又不丢失信息，因 此它可以用来替代磁盘。2006年韩国三星电子公司开发的 Flash 存储芯片的容量已达32 GB。"
    },
    {
        "summary": "磁盘阵列 RAID的基本原理",
        "content": "于是又出现了磁盘阵列 RAID(Redundant Array of    Independent   Disks)。它的基本原理是将并行处理技术引入到磁盘系统。使用多台小型温盘构成  同步化的磁盘阵列，将数据展开分放在多台盘上，而这些盘又能像一台盘那样操作，使数据传输   时间为单台盘的1/n(n  为并行驱动器个数)。"
    },
    {
        "summary": "磁道记录格式",
        "content": "盘面的信息串行排列在磁道上，以字节为单位，若干相关的字节组成记录块， 一系列的记录 块又构成一个“记录”,一批相关的“记录”组成了文件。为了便于寻址，数据块在盘面上的分布 遵循一定规律，称为磁道记录格式。"
    },
    {
        "summary": "硬磁盘的磁道记录格式",
        "content": "常见的有定长记录格式和不定长记录格式两种。"
    },
    {
        "summary": "柱面信息",
        "content": "一个具有 n 个盘片的磁盘组，可将其n 个面上同一半径的磁道看成一个圆柱面，这些磁道存 储的信息称为柱面信息。"
    },
    {
        "summary": "定长记录格式的特点",
        "content": "在定长记录格式中，当台号决定后，磁盘寻址定位首先确定柱面， 再选定磁头 ， 最后找到扇段 。 因此寻址用的磁盘地址应由台号 、 磁道号 、 盘面号 、 扇段号等字段组  成，也可将扇段号用扇区号代替。"
    },
    {
        "summary": "软磁盘存储器与硬磁盘存储器的结构差别",
        "content": "软磁盘存储器与硬磁盘存储器的存储原理和记录方式是相同的，但在结构上有较大差 别：硬盘转速高，存取速度快；软盘转速低，存取速度慢。硬盘有固定磁头、固定盘、盘组等结 构；软盘都是活动头，可换盘片结构。硬盘是靠浮动磁头读/写，磁头不接触盘片；软盘磁头直 接接触盘片进行读/写。硬盘系统及硬盘片价格比较贵，大部分盘片不能互换；"
    },
    {
        "summary": "软磁盘存储器的种类",
        "content": "软磁盘存储器的种类主要是按其盘片尺寸不同而区分的，现有8英寸、5.25英寸、3.5英寸 和2.5英寸几种。"
    },
    {
        "summary": "软磁盘的记录格式",
        "content": "软磁盘存储器采用软分段格式，软分段格式有 IBM 格式和非 IBM 格式两种。"
    },
    {
        "summary": "软分段的磁道组成",
        "content": "软分段的磁道由首部、扇区部和尾部3部分组成。"
    },
    {
        "summary": "白盘",
        "content": "出厂后未使用过的盘片称为白盘，需格式化后才能使用。"
    },
    {
        "summary": "软磁盘存储器的组成",
        "content": "软磁盘存储器也由软磁盘驱动器、软磁盘控制器和软磁盘盘片3部分组成。"
    },
    {
        "summary": "软磁盘驱动器的组成",
        "content": "软磁盘驱动器 是一个相对独立的装置，又称软盘机，主要由驱动机构、磁头及定位机构和读/写电路组成。"
    },
    {
        "summary": "寻道操作",
        "content": "寻道操作：将磁头定位在目标磁道上。"
    },
    {
        "summary": "地址检测操作",
        "content": "地址检测操作：主机将目标地址送往软磁盘控制器，控制器从驱动器上按记录格式读取 地址信息，并与目标地址进行比较，找到欲读(写)信息的磁盘地址。"
    },
    {
        "summary": "读数据操作",
        "content": "读数据操作：首先检测数据标志是否正确，然后将数据字段的内容送入主存，最后用 CRC 校验"
    },
    {
        "summary": "写数据操作",
        "content": "写数据操作：写数据时，不仅要将原始信息经编码后写入磁盘，同时要写上数据区标志和 CRC 校验码以及间隙。"
    },
    {
        "summary": "初始化",
        "content": "初始化：在盘片上写格式化信息，对每个磁道划分区段"
    },
    {
        "summary": "磁带机的种类",
        "content": "磁带机又有很多种类，按磁带机规模分有标准半英寸磁带机、海量宽带磁带机(Mass  Stor-  age) 和盒式磁带机三种。"
    },
    {
        "summary": "数据流磁带机",
        "content": "数据流磁带机是将数据连续地写到磁带上，每个数据块后有一个记录间隙，使磁带机在数据 块间不启停，简化了磁带机的结构，用电子控制替代了机械启停式控制，降低了成本，提高了可 靠性。"
    },
    {
        "summary": "磁带的记录格式",
        "content": "磁带上的信息可以以文件形式存储，也可以按数据块存储。磁带可以在数据块之间启停，进 行数据传输。按数据块存储的磁带互换性更好。"
    },
    {
        "summary": "记录块",
        "content": "磁带机与主机之间进行信息传送的最小单位是数据块或称为记录块(Block),  记录块的长度 可以是固定的，也可以是变化的，由操作系统决定。"
    },
    {
        "summary": "模2运算的特点",
        "content": "模2运算的特点是不考虑进位和借位的 运算"
    },
    {
        "summary": "CRC码的译码和纠错",
        "content": "将收到的循环校验码用约定的生成多项式 G(x) 去除，如果无错，则余数应为0,如果某一位 出错，则余数不为0。"
    },
    {
        "summary": "光盘",
        "content": "光盘(Optical   Disk)是利用光学方式进行读/写信息的圆盘。"
    },
    {
        "summary": "光盘存储器的分类",
        "content": "根据光存储性能和用途的不同，光盘存储器可分为三类。(1)只读型光盘(CD-ROM)(2)只写一次型光盘(WORM)(3)可擦写型光盘"
    },
    {
        "summary": "只读型光盘的特点",
        "content": "这种光盘内的数据和程序是由厂家事先写入的，使用时用户只能读出，不能修改或写人新的 内容。"
    },
    {
        "summary": "浮点数的表示形式",
        "content": "浮点数由阶码j 和尾数S 两部分组成。阶码是整数，阶符和阶码的位数 m合起来反映浮点数的表示范围及小数点的实际位置；尾数是小数，其位数n 反映了浮点数的精度；尾数的符号S代表浮点数的正负。"
    }
]